{"version":3,"file":"static/js/506.81948194.chunk.js","mappings":"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","sources":["components/map/components/WDTrigger.tsx","components/map/components/WDCenter.tsx","components/map/components/WDLabel.tsx","enums/ArrowType.ts","components/map/components/WDProvince.tsx","components/map/components/WDProvinceBorderHighlight.tsx","components/ui/units/WDFleetIcon.tsx","utils/map/drawArrowFunctional.tsx","utils/map/arrowDispatchReceiveCoordinates.ts","components/controllers/WDUnitController.tsx","enums/BuildUnit.ts","components/ui/units/WDUnit.tsx","components/map/components/WDUnitSlot.tsx","components/map/components/WDProvinceOverlay.tsx","components/map/variants/classic/components/WDBoardMap.tsx","utils/map/WDArrowMarkerDefs.tsx","data/BuildUnit.ts","components/map/components/WDBuildUnitButtons.tsx","components/map/components/WDBuildContainer.tsx","../node_modules/react-use/esm/useEvent.js","../node_modules/react-use/esm/useKey.js","../node_modules/react-use/esm/useKeyPress.js","../node_modules/react-use/esm/useUpdateEffect.js","../node_modules/react-use/esm/useFirstMountState.js","../node_modules/react-use/esm/useKeyPressEvent.js","components/map/components/WDFlyoutButton.tsx","components/map/components/WDFlyoutContainer.tsx","components/map/components/WDArrowContainer.tsx","components/map/WDMap.tsx","components/controllers/WDMapController.tsx","utils/map/getInitialViewTranslation.ts"],"sourcesContent":["import * as React from \"react\";\n\nconst WDTrigger: React.FC = function (): React.ReactElement {\n  return (\n    <rect\n      className=\"trigger\"\n      height=\"100%\"\n      width=\"100%\"\n      fill=\"black\"\n      style={{ opacity: 0 }}\n    />\n  );\n};\n\nexport default WDTrigger;\n","import { useTheme } from \"@mui/material\";\nimport * as React from \"react\";\nimport Province from \"../../../enums/map/variants/classic/Province\";\nimport { Coordinates } from \"../../../interfaces\";\nimport WDTrigger from \"./WDTrigger\";\n\ninterface WDCenterProps extends Coordinates {\n  province: Province;\n}\n\nconst WDCenter: React.FC<WDCenterProps> = function ({\n  province,\n  x,\n  y,\n}): React.ReactElement {\n  const theme = useTheme();\n  return (\n    <svg\n      id={`${province}-center`}\n      width=\"34\"\n      height=\"34\"\n      viewBox=\"0 0 34 34\"\n      fill=\"none\"\n      x={x}\n      y={y}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M17 32.9998C25.8366 32.9998 33 25.8364 33 16.9999C33 8.1634 25.8366 1 17 1C8.16344 1 1 8.1634 1 16.9999C1 25.8364 8.16344 32.9998 17 32.9998Z\"\n        stroke={theme.palette.primary.main}\n      />\n      <path\n        d=\"M17.0064 25.7269C21.8263 25.7269 25.7336 21.8196 25.7336 16.9997C25.7336 12.1797 21.8263 8.27243 17.0064 8.27243C12.1866 8.27243 8.2793 12.1797 8.2793 16.9997C8.2793 21.8196 12.1866 25.7269 17.0064 25.7269Z\"\n        fill={theme.palette.primary.main}\n      />\n      <WDTrigger />\n    </svg>\n  );\n};\n\nexport default WDCenter;\n","import { useTheme } from \"@mui/material\";\nimport * as React from \"react\";\nimport { Label } from \"../../../interfaces\";\n\ninterface WDLabelProps extends Label {\n  id?: string;\n}\n\nconst WDLabel: React.FC<WDLabelProps> = function ({\n  id,\n  style,\n  text,\n  x,\n  y,\n}): React.ReactElement {\n  const theme = useTheme();\n  return (\n    <text\n      key={id}\n      className=\"label\"\n      style={{\n        fill: theme.palette.primary.main,\n        fontWeight: 900,\n        fontSize: \"150%\",\n        userSelect: \"none\",\n        ...style,\n      }}\n      x={x}\n      y={y}\n      id={id}\n    >\n      {text}\n    </text>\n  );\n};\n\nWDLabel.defaultProps = {\n  id: undefined,\n};\n\nexport default WDLabel;\n","enum ArrowType {\n  CONVOY,\n  MOVE,\n  SUPPORT,\n  HOLD,\n}\n\nexport default ArrowType;\n","import { useTheme } from \"@mui/material\";\nimport * as React from \"react\";\nimport countryMap from \"../../../data/map/variants/classic/CountryMap\";\nimport { ProvinceMapData } from \"../../../interfaces\";\nimport {\n  gameApiSliceActions,\n  gameMaps,\n  gameOverview,\n} from \"../../../state/game/game-api-slice\";\nimport { useAppDispatch, useAppSelector } from \"../../../state/hooks\";\nimport ClickObjectType from \"../../../types/state/ClickObjectType\";\nimport WDCenter from \"./WDCenter\";\nimport WDLabel from \"./WDLabel\";\nimport Province from \"../../../enums/map/variants/classic/Province\";\nimport Territory from \"../../../enums/map/variants/classic/Territory\";\n\ninterface WDProvinceProps {\n  provinceMapData: ProvinceMapData;\n  ownerCountryID: string | undefined;\n  playerCountryID: number | undefined;\n  highlightSelection: boolean;\n}\n\nconst WDProvince: React.FC<WDProvinceProps> = function ({\n  provinceMapData,\n  ownerCountryID,\n  playerCountryID,\n  highlightSelection,\n}): React.ReactElement {\n  const theme = useTheme();\n  const dispatch = useAppDispatch();\n\n  const { user, members } = useAppSelector(gameOverview);\n\n  const { province } = provinceMapData;\n  let territoryFill = \"none\";\n  let territoryFillOpacity = 0;\n  const territoryStrokeOpacity = 1;\n\n  // Normally, color according to supply center ownership\n  if (ownerCountryID) {\n    const ownerCountry = members.find(\n      (m) => m.countryID === Number(ownerCountryID),\n    )?.country;\n    if (ownerCountry && provinceMapData.type !== \"Sea\") {\n      territoryFill = theme.palette[ownerCountry]?.main;\n      territoryFillOpacity = 0.4;\n    }\n  }\n\n  // If highlighting a selection, color according to the active player's\n  // color, and more opaque.\n  if (highlightSelection && playerCountryID) {\n    const playerCountry = members.find(\n      (m) => m.countryID === playerCountryID,\n    )?.country;\n    if (playerCountry) {\n      territoryFill = theme.palette[playerCountry]?.main;\n      territoryFillOpacity = 1.0;\n    }\n  }\n\n  const clickAction = function (\n    evt: React.MouseEvent<SVGGElement, MouseEvent>,\n  ) {\n    dispatch(\n      gameApiSliceActions.processMapClick({\n        evt,\n        clickProvince: province,\n      }),\n    );\n  };\n  return (\n    <svg\n      height={provinceMapData.height}\n      id={`${province}-province`}\n      viewBox={provinceMapData.viewBox}\n      width={provinceMapData.width}\n      x={provinceMapData.x}\n      y={provinceMapData.y}\n    >\n      <g onClick={(e) => clickAction(e)}>\n        {provinceMapData.texture?.texture && (\n          <path\n            d={provinceMapData.path}\n            fill={provinceMapData.texture.texture}\n            id={`${province}-texture`}\n            stroke={provinceMapData.texture.stroke}\n            strokeOpacity={provinceMapData.texture.strokeOpacity}\n            strokeWidth={provinceMapData.texture.strokeWidth}\n          />\n        )}\n        <path\n          d={provinceMapData.path}\n          fill={territoryFill}\n          fillOpacity={territoryFillOpacity}\n          id={`${province}-control-path`}\n          stroke={theme.palette.primary.main}\n          strokeOpacity={1}\n          strokeWidth={territoryStrokeOpacity}\n        />\n      </g>\n      {provinceMapData.centerPos && (\n        <g className=\"no-pointer-events\">\n          <WDCenter\n            province={province}\n            x={provinceMapData.centerPos.x}\n            y={provinceMapData.centerPos.y}\n          />\n        </g>\n      )}\n      {provinceMapData.labels &&\n        provinceMapData.labels.map(({ name, text, style, x, y }, i) => {\n          let txt = text;\n          const id = `${province}-label-${name}`;\n          if (!txt) {\n            txt = provinceMapData.abbr;\n          }\n          return (\n            <g key={id} className=\"no-pointer-events\">\n              <WDLabel\n                id={id}\n                name={name}\n                key={id || i}\n                style={style}\n                text={txt}\n                x={x}\n                y={y}\n              />\n            </g>\n          );\n        })}\n    </svg>\n  );\n};\n\nexport default WDProvince;\n","import * as React from \"react\";\nimport { ProvinceMapData } from \"../../../interfaces\";\n\ninterface WDProvinceBorderHighlightProps {\n  provinceMapData: ProvinceMapData;\n}\n\nconst WDProvinceBorderHighlight: React.FC<WDProvinceBorderHighlightProps> =\n  function ({ provinceMapData }): React.ReactElement {\n    const { province } = provinceMapData;\n\n    return (\n      <svg\n        height={provinceMapData.height}\n        id={`${province}-province-overlay`}\n        viewBox={provinceMapData.viewBox}\n        width={provinceMapData.width}\n        x={provinceMapData.x}\n        y={provinceMapData.y}\n        overflow=\"visible\"\n      >\n        <path\n          d={provinceMapData.path}\n          fill=\"none\"\n          fillOpacity={0.0}\n          id={`${province}-choice-outline`}\n          stroke=\"black\"\n          strokeOpacity={1}\n          strokeWidth={5}\n        />\n      </svg>\n    );\n  };\n\nexport default WDProvinceBorderHighlight;\n","import * as React from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { IconProps } from \"../../../interfaces/Icons\";\nimport UIState from \"../../../enums/UIState\";\n\n// The drawing of this icon assumes a coordinate system where the icon fits within\n// a rectangle from [0,0] to [FLEET_RAW_ICON_WIDTH,FLEET_RAW_ICON_HEIGHT]\n// This gets scaled a bit by WDUnitController\nexport const FLEET_RAW_ICON_WIDTH = 50;\nexport const FLEET_RAW_ICON_HEIGHT = 50;\n\nconst WDFleetIcon: React.FC<IconProps> = function ({\n  country,\n  iconState = UIState.NONE,\n}): React.ReactElement {\n  const theme = useTheme();\n\n  return (\n    <>\n      {iconState === UIState.NONE && (\n        <path\n          d=\"M25.116 43a2.996 2.996 0 0 1-2.322-1.094 7.488 7.488 0 0 0-1.497-1.348c-.3-.194-.645-.374-1.019-.584a26.407 26.407 0 0 1-4.329-2.966 51.22 51.22 0 0 1-1.768-1.588 2.799 2.799 0 0 1-.928.15 2.996 2.996 0 0 1-1.618-.464c-.644-.435-2.277-1.903-3.265-5.992a14.14 14.14 0 0 1 .509-8.119 2.995 2.995 0 0 1 2.606-1.857h.15c1.123 0 2.262-1.004 2.756-2.726l.36-1.214a3.445 3.445 0 0 1 3.295-2.456c.23-.02.46-.02.69 0h.269a6.171 6.171 0 0 1 12.313 0h.27c.229-.02.46-.02.688 0a3.445 3.445 0 0 1 3.326 2.456l.36 1.214c.494 1.722 1.632 2.726 2.755 2.726h.12a2.996 2.996 0 0 1 2.652 1.857 14.141 14.141 0 0 1 .509 8.12c-.989 4.088-2.621 5.556-3.265 5.99a2.997 2.997 0 0 1-1.678.525 2.799 2.799 0 0 1-.929-.15 51.32 51.32 0 0 1-1.767 1.588 26.403 26.403 0 0 1-4.404 2.936c-.375.21-.72.39-1.019.584a8.24 8.24 0 0 0-1.498 1.348A2.995 2.995 0 0 1 25.116 43Z\"\n          fill=\"#fff\"\n        />\n      )}\n      {iconState === UIState.HOLD && (\n        <path\n          d=\"M29.495 41.418a7.24 7.24 0 0 0-1.298 1.17A3.996 3.996 0 0 1 25.112 44h-.006l.01-1a2.996 2.996 0 0 1-2.322-1.094l6.701-.488Zm0 0c.187-.12.387-.231.636-.368l.302-.168a27.406 27.406 0 0 0 4.56-3.042l.01-.007.008-.007c.499-.43.964-.843 1.402-1.246a3.996 3.996 0 0 0 2.881-.647c.883-.596 2.639-2.295 3.676-6.584l.002-.008a15.14 15.14 0 0 0-.546-8.693l-.006-.016-.006-.016a3.996 3.996 0 0 0-3.536-2.477l-.02-.001H38.718c-.497 0-1.366-.504-1.796-2.002l-.002-.008-.36-1.214v-.003a4.445 4.445 0 0 0-4.244-3.17 5.045 5.045 0 0 0-.129-.008 7.172 7.172 0 0 0-14.051 0 4.948 4.948 0 0 0-.134.009 4.445 4.445 0 0 0-4.21 3.17v.002l-.36 1.214-.002.008c-.43 1.498-1.299 2.002-1.795 2.002h-.178l-.027.001a3.996 3.996 0 0 0-3.477 2.478l-.006.015-.006.016a15.14 15.14 0 0 0-.545 8.693l.002.008c1.038 4.294 2.797 5.991 3.678 6.586l.012.008.012.008c.644.407 1.39.622 2.151.62m16.244 4.847-7.468 1.13a6.488 6.488 0 0 0-1.284-1.157c-.189-.122-.39-.233-.641-.371l-.308-.171a27.407 27.407 0 0 1-4.49-3.076l-.007-.007c-.5-.43-.965-.843-1.403-1.246a3.799 3.799 0 0 1-.643.05m0 0h.007l-.005-1-.009 1h.007Z\"\n          fill=\"#fff\"\n          stroke=\"#000\"\n          strokeWidth={4}\n        />\n      )}\n      {iconState === UIState.DISLODGED && (\n        <>\n          <path\n            d=\"m14.652 38.53-.007-.006a59.03 59.03 0 0 1-1.092-.962 4.799 4.799 0 0 1-.304.008m1.403.96-1.844-1.656c.14.133.284.266.43.4l-.003.296h.014m1.403.96.008.008a28.407 28.407 0 0 0 4.649 3.185l.34.19c.23.125.387.212.54.31.398.274.759.6 1.072.967A4.996 4.996 0 0 0 25.108 45a4.995 4.995 0 0 0 3.848-1.76 6.236 6.236 0 0 1 1.098-.993c.15-.096.305-.181.529-.305l.329-.182a28.416 28.416 0 0 0 4.717-3.147l.017-.014.017-.015c.382-.328.744-.648 1.092-.962a4.996 4.996 0 0 0 3.102-.862c1.119-.757 3-2.685 4.085-7.176l.002-.008.002-.008a16.14 16.14 0 0 0-.582-9.267l-.012-.032-.013-.032a4.996 4.996 0 0 0-4.421-3.097l-.04-.002h-.15c-.021-.005-.106-.032-.241-.162-.192-.184-.438-.538-.603-1.116l-.003-.008-.002-.008-.36-1.214-.001-.006a5.445 5.445 0 0 0-4.542-3.84 8.172 8.172 0 0 0-15.63.004 5.444 5.444 0 0 0-4.511 3.836l-.002.006-.36 1.213-.002.009-.002.008c-.166.578-.411.932-.603 1.116-.135.13-.22.157-.24.162h-.196l-.056.003a4.996 4.996 0 0 0-4.346 3.097l-.013.032-.012.031a16.14 16.14 0 0 0-.581 9.267l.002.008.002.008c1.087 4.499 2.972 6.426 4.09 7.18l.025.016.024.016a4.995 4.995 0 0 0 2.684.774m1.403.96-1.39-1.233.001.273h-.014M38.732 17.14h-.002.002Zm-27.112 0h.003-.003Z\"\n            fill=\"#fff\"\n            stroke=\"#B00\"\n            strokeWidth={3}\n          />\n          <path\n            d=\"M13.5 37.379 36.879 14M30.5 8.672 8 31.172M42.5 19.5 20 42\"\n            stroke=\"#B00\"\n            strokeOpacity={0.5}\n            strokeWidth={2}\n          />\n        </>\n      )}\n      {(iconState === UIState.DISBANDED || iconState === UIState.DESTROY) && (\n        <>\n          <path\n            d=\"m14.652 38.53-.007-.006a59.03 59.03 0 0 1-1.092-.962 4.799 4.799 0 0 1-.304.008m1.403.96-1.844-1.656c.14.133.284.266.43.4l-.003.296h.014m1.403.96.008.008a28.407 28.407 0 0 0 4.649 3.185l.34.19c.23.125.387.212.54.31.398.274.759.6 1.072.967A4.996 4.996 0 0 0 25.108 45a4.995 4.995 0 0 0 3.848-1.76 6.236 6.236 0 0 1 1.098-.993c.15-.096.305-.181.529-.305l.329-.182a28.416 28.416 0 0 0 4.717-3.147l.017-.014.017-.015c.382-.328.744-.648 1.092-.962a4.996 4.996 0 0 0 3.102-.862c1.119-.757 3-2.685 4.085-7.176l.002-.008.002-.008a16.14 16.14 0 0 0-.582-9.267l-.012-.032-.013-.032a4.996 4.996 0 0 0-4.421-3.097l-.04-.002h-.15c-.021-.005-.106-.032-.241-.162-.192-.184-.438-.538-.603-1.116l-.003-.008-.002-.008-.36-1.214-.001-.006a5.445 5.445 0 0 0-4.542-3.84 8.172 8.172 0 0 0-15.63.004 5.444 5.444 0 0 0-4.511 3.836l-.002.006-.36 1.213-.002.009-.002.008c-.166.578-.411.932-.603 1.116-.135.13-.22.157-.24.162h-.196l-.056.003a4.996 4.996 0 0 0-4.346 3.097l-.013.032-.012.031a16.14 16.14 0 0 0-.581 9.267l.002.008.002.008c1.087 4.499 2.972 6.426 4.09 7.18l.025.016.024.016a4.995 4.995 0 0 0 2.684.774m1.403.96-1.39-1.233.001.273h-.014M38.732 17.14h-.002.002Zm-27.112 0h.003-.003Z\"\n            fill=\"#fff\"\n            stroke=\"#B00\"\n            strokeWidth={4}\n          />\n          <path\n            d=\"M13.5 37.379 36.879 14M30.5 8.672 8 31.172M42.5 19.5 20 42\"\n            stroke=\"#B00\"\n            strokeOpacity={0.5}\n            strokeWidth={3}\n          />\n        </>\n      )}\n      {iconState === UIState.BUILD && (\n        <path\n          d=\"M37.058 36.13a3.496 3.496 0 0 0 1.956-.61c.763-.516 2.457-2.1 3.47-6.288v-.004a14.64 14.64 0 0 0-.526-8.406l-.003-.008-.004-.008a3.497 3.497 0 0 0-3.093-2.168H38.718c-.81 0-1.814-.754-2.276-2.364l-.001-.004-.36-1.214v-.001a3.945 3.945 0 0 0-3.785-2.813 4.532 4.532 0 0 0-.53-.012 6.672 6.672 0 0 0-13.21 0 4.505 4.505 0 0 0-.532.012 3.945 3.945 0 0 0-3.752 2.813v.001l-.36 1.214-.001.004c-.463 1.61-1.466 2.364-2.276 2.364H11.457a3.496 3.496 0 0 0-3.041 2.168l-.003.008-.003.008a14.64 14.64 0 0 0-.527 8.406v.004c1.014 4.191 2.71 5.774 3.472 6.288l.006.004.007.004a3.495 3.495 0 0 0 1.884.542c.268.002.535-.028.795-.09.486.453 1.009.92 1.576 1.407l.004.004a26.91 26.91 0 0 0 4.409 3.02l.292.163c.26.143.486.267.692.4.518.354.985.775 1.39 1.253a3.495 3.495 0 0 0 2.704 1.273m11.944-7.37a3.304 3.304 0 0 1-.797-.09c-.487.453-1.01.919-1.576 1.407l-.009.007a26.906 26.906 0 0 1-4.482 2.989l-.29.16c-.26.143-.483.267-.688.4a7.737 7.737 0 0 0-1.398 1.259 3.496 3.496 0 0 1-2.704 1.238m11.944-7.37-.003-.5.004.5ZM25.114 43.5h-.003l.005-.5.002.5h-.004Z\"\n          fill={theme.palette[country].light}\n          stroke={theme.palette[country].main}\n        />\n      )}\n      {\n        false\n        /* Pretty explosion, but not using it right now since it doesn't show the unit type or owner \n        (iconState === UIState.DISBANDED || iconState === UIState.DESTROY) && (\n        <>\n          <path\n            d=\"m19.028 35.458-3.762 3.37.299-4.956L2.743 39.74l9.574-12.332-3.423-2.033 2.985-1.869L0 12.436l14.7 4.915-.85-15.133 5.75 9.707 1.21-5.97 3.386 8.745L39.23 0l-9.542 18.483 3.392.216-1.791 2.141L45 24.366l-13.125 3.15 3.093 3H30.44l5.446 9.013-10.943-5.544-4.946 8.122-.968-6.65Z\"\n            fill=\"#684C41\"\n          />\n          <path\n            d=\"m20.397 31.675-2.954 2.65.21-3.505-8.651 3.964 6.14-7.911-2.594-1.54 2.445-1.528-7.283-6.789 9.048 3.027-.571-10.145 4.292 7.247.901-4.442 2.085 5.374 8.672-8.483-5.476 10.603 2.548.16-1.313 1.575 9.218 2.372-9.043 2.167 2.208 2.147h-3.212l3.753 6.212-6.583-3.335-3.12 5.116-.72-4.936Z\"\n            fill=\"#F1906E\"\n          />\n          <path\n            d=\"m13.474 31.243 5.672-2.6-.15 2.466 2.384-2.136.54 3.71 1.807-2.97 3.48 1.766-2.554-4.22h2.275l-1.575-1.534 6.125-1.467-6.006-1.544.978-1.168-1.951-.124 2.568-4.972-4.128 4.035-1.147-2.97-.685 3.362-3.253-5.492.37 6.583-5.007-1.673 3.994 3.721-2.054 1.287 2.002 1.189-3.685 4.75Z\"\n            fill=\"#FEF189\"\n          />\n        </>\n        ) */\n      }\n      <path\n        d=\"M37.88 22.25a15.446 15.446 0 0 1-2.807 3.96c-1.24.913-2.62 1.62-4.086 2.092a4.31 4.31 0 0 0 3.243.477s.716 0-.533 1.025a12.453 12.453 0 0 1-4.212 2.808 2.316 2.316 0 0 1-2.808-1.84c-.183-.73-.267-6.837-.323-10.824l2.92-.857a.435.435 0 0 0 .478.155.492.492 0 0 0 .337-.393l.758-.225a.463.463 0 0 0 .714.008.45.45 0 0 0 .1-.246l.646-.197a.407.407 0 0 0 .28-.506l-.322-1.15a.407.407 0 0 0-.506-.281l-.603.28a.464.464 0 0 0-.492-.154.464.464 0 0 0-.323.393L29.57 17a.434.434 0 0 0-.477-.155.449.449 0 0 0-.323.393l-2.373.688v-1.193a2.977 2.977 0 1 0-2.246 0v1.193l-2.373-.688a.45.45 0 0 0-.323-.393.435.435 0 0 0-.477.155l-.773-.225a.463.463 0 0 0-.322-.393.464.464 0 0 0-.492.154l-.646-.196a.407.407 0 0 0-.52.196l-.336 1.123a.407.407 0 0 0 .28.506l.647.197a.45.45 0 0 0 .322.393.464.464 0 0 0 .492-.155l.758.225a.491.491 0 0 0 .337.393.436.436 0 0 0 .477-.155l2.92.857c0 3.987-.14 10.095-.322 10.825a2.317 2.317 0 0 1-2.808 1.839 12.453 12.453 0 0 1-4.212-2.808c-1.25-1.053-.534-1.025-.534-1.025a4.31 4.31 0 0 0 3.243-.477 14.28 14.28 0 0 1-4.071-2.064 15.443 15.443 0 0 1-2.808-3.96 10.446 10.446 0 0 0-.337 5.883c.772 3.187 1.895 3.96 1.895 3.96.025-.763.1-1.523.225-2.275A21.062 21.062 0 0 0 18.52 34.1a31.254 31.254 0 0 0 4.703 3.06A9.911 9.911 0 0 1 25.245 39a9.91 9.91 0 0 1 2.036-1.84 31.248 31.248 0 0 0 4.703-3.06 21.06 21.06 0 0 0 4.128-4.282c.125.752.2 1.512.224 2.274 0 0 1.123-.772 1.896-3.959.45-1.954.328-3.996-.351-5.883Zm-14.376-8.353a1.74 1.74 0 1 1 3.482 0 1.713 1.713 0 0 1-.632 1.404c0-.815-.197-1.404-1.081-1.404-.885 0-1.053.52-1.081 1.404a1.714 1.714 0 0 1-.688-1.404Z\"\n        fill={theme.palette[country].main}\n        stroke={theme.palette[country].main}\n        strokeWidth={1}\n      />\n    </>\n  );\n};\n\nexport default WDFleetIcon;\n","import * as React from \"react\";\nimport ArrowColor from \"../../enums/ArrowColor\";\nimport ArrowType from \"../../enums/ArrowType\";\nimport Territory from \"../../enums/map/variants/classic/Territory\";\nimport webDiplomacyTheme from \"../../webDiplomacyTheme\";\nimport arrowDispatchReceiveCoordinates from \"./arrowDispatchReceiveCoordinates\";\nimport TerritoryMap from \"../../data/map/variants/classic/TerritoryMap\";\nimport { UNIT_HEIGHT, UNIT_WIDTH } from \"../../components/ui/units/WDUnit\";\n\n// Returns the coordinates of the upper left corner of the source or destination\n// of an arrow, and the source or destination object's width and height.\n// Type and identifier specify what object the arrow is pointing to, which is\n// necessary for targeting and spacing the arrow appropriately.\n// If type is \"arrow\", then identifier must be a 4-tuple of the coordinates\n// [x1, y1, x2, y2] of that arrow.\n// For all other types, identifier must be a Territory.\nexport function getTargetXYWH(\n  type: \"territory\" | \"unit\" | \"arrow\" | \"dislodger\",\n  identifier: Territory | [number, number, number, number],\n): [number, number, number, number] {\n  let x;\n  let y;\n  let width;\n  let height;\n\n  switch (type) {\n    case \"arrow\": {\n      // If the target of this arrow is itself an arrow, then target a point\n      // attachPoint proportion of the way along that arrow.\n      const [arrowX1, arrowY1, arrowX2, arrowY2] = identifier as [\n        number,\n        number,\n        number,\n        number,\n      ];\n      const attachPoint = 0.75;\n      const run = arrowX2 - arrowX1;\n      const rise = arrowY2 - arrowY1;\n\n      x = arrowX1 + run * attachPoint;\n      y = arrowY1 + rise * attachPoint;\n      width = 0;\n      height = 0;\n      break;\n    }\n    // If the target of this arrow is a unit, then (regardless of whether the\n    // unit drawing code actually draws a unit there), draw an arrow to the\n    // slot that the unit would be placed at, spaced appropriately for the size\n    // that unit's icon would be.\n    case \"unit\": {\n      const toTerritoryName = Territory[identifier as Territory];\n      const toTerritoryData = TerritoryMap[toTerritoryName].provinceMapData;\n      const { unitSlotName } = TerritoryMap[toTerritoryName];\n\n      x = toTerritoryData.x;\n      y = toTerritoryData.y;\n      if (toTerritoryData.unitSlotsBySlotName[unitSlotName]) {\n        x += toTerritoryData.unitSlotsBySlotName[unitSlotName].x;\n        y += toTerritoryData.unitSlotsBySlotName[unitSlotName].y;\n      }\n      width = UNIT_WIDTH;\n      height = UNIT_HEIGHT;\n      break;\n    }\n    // Units on retreat phases that are dislodging another unit are placed in\n    // the arrow receiver slot rather than in the normal unit drawing slot.\n    // This is so they don't overlap the drawing of the unit in that territory\n    // that needs to perform a retreat.\n    // So when drawing an arrow to a dislodger, we need to point at the\n    // arrow receiver slot instead.\n    case \"dislodger\": {\n      const toTerritoryName = Territory[identifier as Territory];\n      const toTerritoryData = TerritoryMap[toTerritoryName].provinceMapData;\n      const { unitSlotName } = TerritoryMap[toTerritoryName];\n\n      x = toTerritoryData.x;\n      y = toTerritoryData.y;\n      if (toTerritoryData.unitSlotsBySlotName[unitSlotName]) {\n        x += toTerritoryData.unitSlotsBySlotName[unitSlotName].arrowReceiver.x;\n        y += toTerritoryData.unitSlotsBySlotName[unitSlotName].arrowReceiver.y;\n      }\n      width = UNIT_WIDTH;\n      height = UNIT_HEIGHT;\n      break;\n    }\n    // Otherwise, draw an arrow pointing to the arrow receiver slot of the\n    // territory. We still draw the arrow as if pointing to an object\n    // of a small buffersize many pixels. That way, the arrows stop slightly short\n    // of the exact target location. This looks a bit nicer when\n    // multiple arrows point to the same territory - the arrow points\n    // stop slightly short of each other instead of all overlapping.\n    default: {\n      const toTerritoryName = Territory[identifier as Territory];\n      const toTerritoryData = TerritoryMap[toTerritoryName].provinceMapData;\n      const { unitSlotName } = TerritoryMap[toTerritoryName];\n\n      const bufferSize = 12;\n\n      x = toTerritoryData.x;\n      y = toTerritoryData.y;\n      if (toTerritoryData.unitSlotsBySlotName[unitSlotName]) {\n        x += toTerritoryData.unitSlotsBySlotName[unitSlotName].arrowReceiver.x;\n        y += toTerritoryData.unitSlotsBySlotName[unitSlotName].arrowReceiver.y;\n      }\n      width = bufferSize;\n      height = bufferSize;\n      break;\n    }\n  }\n\n  return [x, y, width, height];\n}\n\n// See getTargetXYWH for a description of the possible types and identifiers.\nexport function getArrowX1Y1X2Y2(\n  sourceType: \"territory\" | \"unit\" | \"arrow\" | \"dislodger\",\n  sourceIdentifier: Territory | [number, number, number, number],\n  receiverType: \"territory\" | \"unit\" | \"arrow\" | \"dislodger\",\n  receiverIdentifier: Territory | [number, number, number, number],\n): [number, number, number, number] {\n  // Source of arrow\n  // eslint-disable-next-line prefer-const\n  let [sx1, sy1, sourceWidth, sourceHeight] = getTargetXYWH(\n    sourceType,\n    sourceIdentifier,\n  );\n  const [rx2, ry2, receiverWidth, receiverHeight] = getTargetXYWH(\n    receiverType,\n    receiverIdentifier,\n  );\n\n  // Draw the arrows slightly closer to a unit than their nominal size for the arrow source, the portion of\n  // the unit's nominal size that the unit icon actually covers is a bit smaller and\n  // the arrow looks a bit too far away otherwise.\n  const UNIT_SOURCE_SHRINK_FACTOR = 0.8;\n  if (sourceType === \"unit\" || sourceType === \"dislodger\") {\n    sourceWidth *= UNIT_SOURCE_SHRINK_FACTOR;\n    sourceHeight *= UNIT_SOURCE_SHRINK_FACTOR;\n  }\n\n  const { x1, x2, y1, y2 } = arrowDispatchReceiveCoordinates(\n    sourceHeight,\n    sourceWidth,\n    receiverHeight,\n    receiverWidth,\n    sx1,\n    rx2,\n    sy1,\n    ry2,\n  );\n\n  return [x1, y1, x2, y2];\n}\n\nexport function makeSVGDrawAsUnsavedAnimateElement(): React.ReactElement {\n  return (\n    <animate\n      attributeName=\"opacity\"\n      values=\"1.0;0.8;0.25;0.8;1.0\"\n      keyTimes=\"0; 0.25; 0.5; 0.75; 1.0\"\n      dur=\"1.0s\"\n      repeatCount=\"indefinite\"\n    />\n  );\n}\n// Gentler blinking, for things that are larger and therefore don't need to blink\n// quite as hard as arrows do to be equally visually attention-drawing.\nexport function makeSVGDrawAsUnsavedAnimateElementGentle(): React.ReactElement {\n  return (\n    <animate\n      attributeName=\"opacity\"\n      values=\"1.0;0.9;0.5;0.9;1.0\"\n      keyTimes=\"0; 0.25; 0.5; 0.75; 1.0\"\n      dur=\"1.0s\"\n      repeatCount=\"indefinite\"\n    />\n  );\n}\n\n// See getTargetXYWH for a description of the possible types and identifiers.\nexport default function drawArrowFunctional(\n  arrowType: ArrowType,\n  arrowColor: ArrowColor,\n  sourceType: \"territory\" | \"unit\" | \"arrow\" | \"dislodger\",\n  sourceIdentifier: Territory | [number, number, number, number],\n  receiverType: \"territory\" | \"unit\" | \"arrow\" | \"dislodger\",\n  receiverIdentifier: Territory | [number, number, number, number],\n  drawAsUnsaved: boolean | undefined = false,\n  offsetArrowSourcePixels = 0.0,\n): React.ReactElement {\n  // console.log(\n  //   `drawArrowFunctional ${sourceIdentifier} ${receiverType} ${receiverIdentifier} `,\n  // );\n  // eslint-disable-next-line prefer-const\n  let [x1, y1, x2, y2] = getArrowX1Y1X2Y2(\n    sourceType,\n    sourceIdentifier,\n    receiverType,\n    receiverIdentifier,\n  );\n\n  let strokeDasharray: string | undefined;\n  if (arrowType === ArrowType.CONVOY) {\n    strokeDasharray = \"4 3\";\n  } else if (arrowType === ArrowType.HOLD) {\n    strokeDasharray = \"12 3\";\n  }\n\n  let strokeWidth;\n  switch (arrowColor) {\n    case ArrowColor.MOVE:\n    case ArrowColor.CONVOY:\n    case ArrowColor.IMPLIED:\n    case ArrowColor.IMPLIED_FOREIGN:\n    case ArrowColor.RETREAT:\n    case ArrowColor.SUPPORT_HOLD:\n    case ArrowColor.SUPPORT_MOVE:\n      strokeWidth = 3.5;\n      break;\n    case ArrowColor.MOVE_FAILED:\n    case ArrowColor.CONVOY_FAILED:\n    case ArrowColor.SUPPORT_HOLD_FAILED:\n    case ArrowColor.SUPPORT_MOVE_FAILED:\n      strokeWidth = 3;\n      break;\n    default:\n      strokeWidth = 3.5;\n  }\n\n  if (offsetArrowSourcePixels > 0) {\n    // Offset the source location perpendicular to the direction of travel by\n    // offsetArrowSourcePixels distance.\n    // Start by finding a unit vector in the direction of the arrows\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const length = Math.sqrt(dx * dx + dy * dy);\n    if (length > 0) {\n      const dxunit = dx / length;\n      const dyunit = dy / length;\n      // Rotate 90 degrees\n      const dxunitRotated = dyunit;\n      const dyunitRotated = -dxunit;\n      // Add the desired number of pixels\n      x1 += offsetArrowSourcePixels * dxunitRotated;\n      y1 += offsetArrowSourcePixels * dyunitRotated;\n    }\n  }\n\n  return (\n    <line\n      key={`${x1}-${y1}-${x2}-${y2}-${arrowType}-${arrowColor}`}\n      x1={x1}\n      y1={y1}\n      x2={x2}\n      y2={y2}\n      markerEnd={`url(#arrowHead__${ArrowType[arrowType]}_${ArrowColor[arrowColor]})`}\n      stroke={webDiplomacyTheme.palette.arrowColors[arrowColor].main}\n      strokeWidth={strokeWidth}\n      strokeDasharray={strokeDasharray}\n    >\n      {drawAsUnsaved && makeSVGDrawAsUnsavedAnimateElement()}\n    </line>\n  );\n}\n","export default function arrowDispatchReceiveCoordinates(\n  unitH: number, // dispatch unit height\n  unitW: number, // dispatch unit width\n  rh: number, // receiver height\n  rw: number, // receiver width\n  x1: number, // line x1\n  x2: number, // line x2\n  y1: number, // line y1\n  y2: number, // line y2\n): {\n  x1: number;\n  x2: number;\n  y1: number;\n  y2: number;\n} {\n  // Compute the angle that we need the arrow to go at\n  // If there isn't an angle because the diff is too small, quit out immediately\n  const xDiff = x2 - x1;\n  const yDiff = y2 - y1;\n  if (Math.abs(xDiff) <= 1e-10 && Math.abs(yDiff) <= 1e-10) {\n    return {\n      x1,\n      x2,\n      y1,\n      y2,\n    };\n  }\n  const theta = Math.atan2(yDiff, xDiff);\n\n  // Make the arrow start at the border of the ellipse with the specified\n  // width and height.\n  const x1New = x1 + (unitW / 2) * Math.cos(theta);\n  const y1New = y1 + (unitH / 2) * Math.sin(theta);\n\n  // Make the arrow end at the border of the ellipse with the specified\n  // width and height.\n  const x2New = x2 - (rw / 2) * Math.cos(theta);\n  const y2New = y2 - (rh / 2) * Math.sin(theta);\n\n  // If the result would give an arrow that points backwards, due to overlap\n  // between the source and destination then give up and don't do adjustment\n  // for the source and receiver width and height.\n  // Determine if it points backwards by dot product with the original vector\n  const xDiffNew = x2New - x1New;\n  const yDiffNew = y2New - y1New;\n  if (xDiffNew * xDiff + yDiffNew * yDiff <= 1e-10) {\n    return {\n      x1,\n      x2,\n      y1,\n      y2,\n    };\n  }\n\n  return {\n    x1: x1New,\n    x2: x2New,\n    y1: y1New,\n    y2: y2New,\n  };\n}\n","import * as React from \"react\";\nimport debounce from \"../../utils/debounce\";\nimport WDFleetIcon, {\n  FLEET_RAW_ICON_WIDTH,\n  FLEET_RAW_ICON_HEIGHT,\n} from \"../ui/units/WDFleetIcon\";\nimport WDArmyIcon, {\n  ARMY_RAW_ICON_WIDTH,\n  ARMY_RAW_ICON_HEIGHT,\n} from \"../ui/units/WDArmyIcon\";\nimport { Unit } from \"../../utils/map/getUnits\";\nimport UIState from \"../../enums/UIState\";\nimport { makeSVGDrawAsUnsavedAnimateElementGentle } from \"../../utils/map/drawArrowFunctional\";\n\ninterface UnitControllerProps {\n  unit: Unit;\n  unitState: UIState;\n  unitWidth: number;\n  unitHeight: number;\n}\n\nconst WDUnitController: React.FC<UnitControllerProps> = function ({\n  unit,\n  unitState,\n  unitWidth,\n  unitHeight,\n}): React.ReactElement {\n  const iconWidth =\n    unit.unit.type === \"Fleet\" ? FLEET_RAW_ICON_WIDTH : ARMY_RAW_ICON_WIDTH;\n  const iconHeight =\n    unit.unit.type === \"Fleet\" ? FLEET_RAW_ICON_HEIGHT : ARMY_RAW_ICON_HEIGHT;\n\n  // The icons expect that 0,0 is the upper left corner of the unit, whereas this WDUnitController\n  // svg element is expected to be positioned such that 0,0 is the center of the\n  // unit. So we need to translate to reconcile these.\n  const xOffset = iconWidth / 2;\n  const yOffset = iconHeight / 2;\n\n  // Translate from the coordinate scale of the icons in WDFleetIcon and\n  // WDArmyIcon to the size we want to actually draw this unit\n  const xScale = unitWidth / iconWidth;\n  const yScale = unitHeight / iconHeight;\n\n  const transform = `scale(${xScale}, ${yScale}) translate(-${xOffset},-${yOffset})`;\n  return (\n    <g\n      style={{ pointerEvents: \"none\", overflow: \"visible\" }}\n      transform={transform}\n    >\n      {unit.unit.type === \"Fleet\" && (\n        <WDFleetIcon iconState={unitState} country={unit.country} />\n      )}\n      {unit.unit.type === \"Army\" && (\n        <WDArmyIcon iconState={unitState} country={unit.country} />\n      )}\n      {unit.drawAsUnsaved && makeSVGDrawAsUnsavedAnimateElementGentle()}\n    </g>\n  );\n};\n\nexport default WDUnitController;\n","/* eslint-disable no-bitwise */\n\nenum BuildUnit {\n  Army = 1 << 1,\n  Fleet = 1 << 2,\n  All = Army | Fleet,\n}\n\nexport default BuildUnit;\n","import * as React from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport WDUnitController from \"../../controllers/WDUnitController\";\nimport { Unit } from \"../../../utils/map/getUnits\";\nimport UIState from \"../../../enums/UIState\";\n\nexport const UNIT_HEIGHT = 75;\nexport const UNIT_WIDTH = 75;\n\ninterface WDUnitProps {\n  id: string | undefined;\n  unit: Unit;\n  unitState: UIState;\n}\n\nconst WDUnit: React.FC<WDUnitProps> = function ({\n  id,\n  unit,\n  unitState,\n}): React.ReactElement {\n  const theme = useTheme();\n  return (\n    <g\n      filter={theme.palette.svg.filters.dropShadows[1]}\n      height={UNIT_HEIGHT}\n      id={id}\n      width={UNIT_WIDTH}\n      style={{ overflow: \"visible\" }}\n    >\n      <WDUnitController\n        unit={unit}\n        unitState={unitState}\n        unitWidth={UNIT_WIDTH}\n        unitHeight={UNIT_HEIGHT}\n      />\n    </g>\n  );\n};\n\nexport default WDUnit;\n","import * as React from \"react\";\nimport Territory from \"../../../enums/map/variants/classic/Territory\";\nimport { Coordinates } from \"../../../interfaces\";\n\ninterface WDUnitSlotProps extends Coordinates {\n  name: string;\n}\n\nconst WDUnitSlot: React.FC<WDUnitSlotProps> = function ({\n  children,\n  name,\n  x,\n  y,\n}): React.ReactElement {\n  return (\n    <g\n      className=\"unit-slot\"\n      id={`${name}-unit-slot`}\n      style={{ overflow: \"visible\" }}\n      x={x}\n      y={y}\n      transform={`translate(${x} ${y})`}\n    >\n      {children}\n    </g>\n  );\n};\n\nexport default WDUnitSlot;\n","import * as React from \"react\";\nimport UIState from \"../../../enums/UIState\";\nimport { ProvinceMapData } from \"../../../interfaces\";\nimport UnitType from \"../../../types/UnitType\";\nimport WDUnit from \"../../ui/units/WDUnit\";\nimport WDUnitSlot from \"./WDUnitSlot\";\nimport { Unit, UnitDrawMode } from \"../../../utils/map/getUnits\";\nimport Province from \"../../../enums/map/variants/classic/Province\";\nimport Territory from \"../../../enums/map/variants/classic/Territory\";\n\ninterface WDProvinceOverlayProps {\n  provinceMapData: ProvinceMapData;\n  units: Unit[];\n}\n\nconst WDProvinceOverlay: React.FC<WDProvinceOverlayProps> = function ({\n  provinceMapData,\n  units,\n}): React.ReactElement {\n  const { province } = provinceMapData;\n\n  // Maps unitSlot name -> unit to draw.\n  const unitFCs: { [key: string]: React.ReactElement } = {};\n  // Maps unitSlot name -> unit to draw, but specifically for units\n  // that are currently disloging another unit on a retreat phase.\n  // This is separate because we need to draw the\n  // dislodger unit in an alternative location when there are two\n  // units in a territory so that they don't overlap each other, including\n  // when those units share the same unitSlot within that territory.\n  const unitFCsDislodging: { [key: string]: React.ReactElement } = {};\n\n  units\n    .filter((unit) => unit.mappedTerritory.province === province)\n    .forEach((unit) => {\n      let unitState: UIState;\n      switch (unit.drawMode) {\n        case UnitDrawMode.NONE:\n          unitState = UIState.NONE;\n          break;\n        case UnitDrawMode.HOLD:\n          unitState = UIState.HOLD;\n          break;\n        case UnitDrawMode.BUILD:\n          // This state of drawing the unit reduces constrast on the unit and isn't necessary\n          // now that we have green build circles highlighting the new builds.\n          // unitState = UIState.BUILD;\n          unitState = UIState.NONE;\n          break;\n        case UnitDrawMode.DISLODGING:\n          unitState = UIState.NONE;\n          break;\n        case UnitDrawMode.DISLODGED:\n          unitState = UIState.DISLODGED;\n          break;\n        case UnitDrawMode.DISBANDED:\n          unitState = UIState.DISBANDED;\n          break;\n        default:\n          unitState = UIState.NONE;\n          break;\n      }\n      const wdUnit = (\n        <WDUnit id={`${province}-unit`} unit={unit} unitState={unitState} />\n      );\n      if (unit.drawMode === UnitDrawMode.DISLODGING) {\n        unitFCsDislodging[unit.mappedTerritory.unitSlotName] = wdUnit;\n      } else {\n        unitFCs[unit.mappedTerritory.unitSlotName] = wdUnit;\n      }\n    });\n\n  return (\n    <g\n      height={provinceMapData.height}\n      id={`${province}-province-overlay`}\n      width={provinceMapData.width}\n      x={provinceMapData.x}\n      y={provinceMapData.y}\n      transform={`translate(${provinceMapData.x} ${provinceMapData.y})`}\n      overflow=\"visible\"\n    >\n      {provinceMapData.unitSlots\n        .filter(({ name }) => name in unitFCs)\n        .map(({ name, x, y }) => (\n          <WDUnitSlot key={name} name={name} x={x} y={y}>\n            {unitFCs[name]}\n          </WDUnitSlot>\n        ))}\n      {provinceMapData.unitSlots\n        .filter(({ name }) => name in unitFCsDislodging)\n        .map(({ name, arrowReceiver }) => {\n          const unitName = `${name}-dislodging`;\n          // For dislodger units, we draw them at the location of the\n          // arrow receiver.\n          return (\n            <WDUnitSlot\n              key={unitName}\n              name={unitName}\n              x={arrowReceiver.x}\n              y={arrowReceiver.y}\n            >\n              {unitFCsDislodging[name]}\n            </WDUnitSlot>\n          );\n        })}\n    </g>\n  );\n};\n\nexport default WDProvinceOverlay;\n","import * as React from \"react\";\nimport WDProvince from \"../../../components/WDProvince\";\nimport WDProvinceBorderHighlight from \"../../../components/WDProvinceBorderHighlight\";\nimport WDProvinceOverlay from \"../../../components/WDProvinceOverlay\";\nimport { Unit } from \"../../../../../utils/map/getUnits\";\nimport provincesMapData from \"../../../../../data/map/ProvincesMapData\";\nimport Province from \"../../../../../enums/map/variants/classic/Province\";\nimport {\n  gameData,\n  gameLegalOrders,\n  gameMaps,\n  gameOrder,\n  gameOverview,\n} from \"../../../../../state/game/game-api-slice\";\nimport { useAppSelector } from \"../../../../../state/hooks\";\nimport { IProvinceStatus } from \"../../../../../models/Interfaces\";\nimport OrderState from \"../../../../../state/interfaces/OrderState\";\nimport { LegalOrders } from \"../../../../../utils/state/gameApiSlice/extraReducers/fetchGameData/precomputeLegalOrders\";\nimport TerritoryMap from \"../../../../../data/map/variants/classic/TerritoryMap\";\nimport countryMap from \"../../../../../data/map/variants/classic/CountryMap\";\n\ninterface WDBoardMapProps {\n  units: Unit[];\n  centersByProvince: { [key: string]: { ownerCountryID: string } };\n  phase: string;\n  isLivePhase: boolean; // Game is live and user is viewing the latest phase?\n}\n\nconst WDBoardMap: React.FC<WDBoardMapProps> = function ({\n  units,\n  centersByProvince,\n  phase,\n  isLivePhase,\n}): React.ReactElement {\n  const gameDataResponse = useAppSelector(gameData);\n  const maps = useAppSelector(gameMaps);\n  const provinceStatusByProvID: { [key: string]: IProvinceStatus } = {};\n  gameDataResponse.data.territoryStatuses.forEach((provinceStatus) => {\n    provinceStatusByProvID[maps.terrIDToProvince[provinceStatus.id]] =\n      provinceStatus;\n  });\n\n  const curOrder: OrderState = useAppSelector(gameOrder);\n  const legalOrders: LegalOrders = useAppSelector(gameLegalOrders);\n\n  const overview = useAppSelector(gameOverview);\n  const { members, user } = overview;\n\n  let provincesToHighlight: Province[] = [];\n  let provincesToChoose: Province[] = [];\n  if (isLivePhase && user) {\n    if (phase === \"Diplomacy\") {\n      if (!curOrder.inProgress) {\n        provincesToHighlight = [];\n        provincesToChoose = [];\n      } else if (curOrder.type === \"Move\") {\n        if (curOrder.viaConvoy) {\n          provincesToHighlight = [\n            maps.terrIDToProvince[maps.unitToTerrID[curOrder.unitID]],\n          ];\n          provincesToChoose = legalOrders.legalViasByUnitID[\n            curOrder.unitID\n          ].map((via) => TerritoryMap[via.dest].province);\n        } else {\n          provincesToHighlight = [\n            maps.terrIDToProvince[maps.unitToTerrID[curOrder.unitID]],\n          ];\n          provincesToChoose = legalOrders.legalMoveDestsByUnitID[\n            curOrder.unitID\n          ].map((territory) => TerritoryMap[territory].province);\n        }\n      } else if (curOrder.type === \"Support\") {\n        if (curOrder.fromTerrID) {\n          provincesToHighlight = [\n            maps.terrIDToProvince[maps.unitToTerrID[curOrder.unitID]],\n            maps.terrIDToProvince[curOrder.fromTerrID],\n          ];\n          provincesToChoose = legalOrders.legalSupportsByUnitID[\n            curOrder.unitID\n          ][maps.terrIDToProvince[curOrder.fromTerrID]].map(\n            (support) => support.dest,\n          );\n        } else {\n          provincesToHighlight = [\n            maps.terrIDToProvince[maps.unitToTerrID[curOrder.unitID]],\n          ];\n          provincesToChoose = Object.keys(\n            legalOrders.legalSupportsByUnitID[curOrder.unitID],\n          ) as Province[];\n        }\n      } else if (curOrder.type === \"Convoy\") {\n        if (curOrder.fromTerrID) {\n          provincesToHighlight = [\n            maps.terrIDToProvince[maps.unitToTerrID[curOrder.unitID]],\n            maps.terrIDToProvince[curOrder.fromTerrID],\n          ];\n          provincesToChoose = Object.keys(\n            legalOrders.legalConvoysByUnitID[curOrder.unitID][\n              maps.terrIDToProvince[curOrder.fromTerrID]\n            ],\n          ) as Province[];\n        } else {\n          provincesToHighlight = [\n            maps.terrIDToProvince[maps.unitToTerrID[curOrder.unitID]],\n          ];\n          provincesToChoose = Object.keys(\n            legalOrders.legalConvoysByUnitID[curOrder.unitID],\n          ) as Province[];\n        }\n      }\n    } else if (phase === \"Retreats\") {\n      if (!curOrder.inProgress) {\n        provincesToHighlight = [];\n        provincesToChoose = Object.keys(\n          legalOrders.legalRetreatDestsByUnitID,\n        ).map((unitID) => maps.terrIDToProvince[maps.unitToTerrID[unitID]]);\n      } else if (curOrder.type === \"Retreat\") {\n        provincesToHighlight = [\n          maps.terrIDToProvince[maps.unitToTerrID[curOrder.unitID]],\n        ];\n        provincesToChoose = legalOrders.legalRetreatDestsByUnitID[\n          curOrder.unitID\n        ].map((territory) => TerritoryMap[territory].province);\n        provincesToChoose.push(provincesToHighlight[0]);\n      }\n    } else if (phase === \"Builds\") {\n      if (user.member.supplyCenterNo < user.member.unitNo) {\n        provincesToChoose = units\n          .filter((unit) => unit.country === user.member.country)\n          .map((unit) => unit.mappedTerritory.province);\n      } else if (user.member.supplyCenterNo > user.member.unitNo) {\n        provincesToChoose = legalOrders.possibleBuildDests.map(\n          (territory) => TerritoryMap[territory].province,\n        );\n      }\n    }\n  }\n  const provincesToHighlightSet = new Set(provincesToHighlight);\n  const provincesToChooseSet = new Set(provincesToChoose);\n  // console.log({ provincesToChooseSet });\n\n  const unplayableProvinces = Object.values(provincesMapData)\n    .filter((data) => !data.playable)\n    .map((data) => {\n      return (\n        <WDProvince\n          provinceMapData={data}\n          ownerCountryID={centersByProvince[data.province]?.ownerCountryID}\n          playerCountryID={user?.member.countryID}\n          highlightSelection={false}\n          key={`${data.province}-province`}\n        />\n      );\n    });\n  // Hack - Rome and Naples need to be sorted to the end or else their label will get cut\n  // off by neighboring territories drawn on top of it.\n  const playableProvincesData = Object.values(provincesMapData).filter(\n    (data) =>\n      data.playable &&\n      data.province !== Province.NAPLES &&\n      data.province !== Province.ROME,\n  );\n  playableProvincesData.push(provincesMapData[Province.NAPLES]);\n  playableProvincesData.push(provincesMapData[Province.ROME]);\n\n  const playableProvinces = playableProvincesData.map((data) => {\n    const highlightSelection = provincesToHighlightSet.has(data.province);\n    return (\n      <WDProvince\n        provinceMapData={data}\n        ownerCountryID={centersByProvince[data.province]?.ownerCountryID}\n        playerCountryID={user?.member.countryID}\n        highlightSelection={highlightSelection}\n        key={`${data.province}-province`}\n      />\n    );\n  });\n\n  const playableProvinceBorderHighlights = playableProvincesData\n    .filter((data) => provincesToChooseSet.has(data.province))\n    .map((data) => {\n      return (\n        <WDProvinceBorderHighlight\n          provinceMapData={data}\n          key={`${data.province}-province-border-highlight`}\n        />\n      );\n    });\n\n  const playableProvinceOverlays = playableProvincesData.map((data) => {\n    return (\n      <WDProvinceOverlay\n        provinceMapData={data}\n        units={units}\n        key={`${data.province}-province-overlay`}\n      />\n    );\n  });\n\n  return (\n    <g id=\"wD-boardmap-v10.3.4 1\">\n      <g id=\"unplayable\">{unplayableProvinces}</g>\n      <g id=\"playableProvinces\">{playableProvinces}</g>\n      <g id=\"playableProvinceBorderHighlights\">\n        {playableProvinceBorderHighlights}\n      </g>\n      <g id=\"playableProvinceOverlays\">{playableProvinceOverlays}</g>\n    </g>\n  );\n};\n\nexport default WDBoardMap;\n","import * as React from \"react\";\nimport ArrowColor from \"../../enums/ArrowColor\";\nimport ArrowType from \"../../enums/ArrowType\";\nimport webDiplomacyTheme from \"../../webDiplomacyTheme\";\n\nconst WDArrowMarkerColors = function (\n  arrowType: ArrowType,\n): React.ReactElement {\n  switch (arrowType) {\n    case ArrowType.SUPPORT:\n      return (\n        <>\n          {Object.entries(webDiplomacyTheme.palette.arrowColors).map(\n            ([arrowColor, config]) => (\n              <marker\n                id={`arrowHead__${ArrowType[arrowType]}_${ArrowColor[arrowColor]}`}\n                key={`arrowHead__${ArrowType[arrowType]}_${ArrowColor[arrowColor]}`}\n                markerWidth={12}\n                markerHeight={8}\n                refX={18}\n                refY={3}\n                orient=\"auto\"\n              >\n                <polygon\n                  points=\"0 0, 6 3, 0 6, 0 5, 4 3, 0 1\"\n                  fill={config.main}\n                />\n                <polygon\n                  points=\"4 0, 10 3, 4 6, 4 5, 8 3, 4 1\"\n                  fill={config.main}\n                />\n              </marker>\n            ),\n          )}\n        </>\n      );\n    case ArrowType.HOLD:\n      return (\n        <>\n          {Object.entries(webDiplomacyTheme.palette.arrowColors).map(\n            ([arrowColor, config]) => (\n              <marker\n                id={`arrowHead__${ArrowType[arrowType]}_${ArrowColor[arrowColor]}`}\n                key={`arrowHead__${ArrowType[arrowType]}_${ArrowColor[arrowColor]}`}\n                markerWidth={90}\n                markerHeight={90}\n                refX={10}\n                refY={45}\n                orient=\"auto\"\n                markerUnits=\"userSpaceOnUse\"\n                strokeWidth={4}\n              >\n                <path d=\" M 24 72 A 30 30 180 0 1 24 18\" stroke={config.main} />\n              </marker>\n            ),\n          )}\n        </>\n      );\n    default:\n      return (\n        <>\n          {Object.entries(webDiplomacyTheme.palette.arrowColors).map(\n            ([arrowColor, config]) => (\n              <marker\n                id={`arrowHead__${ArrowType[arrowType]}_${ArrowColor[arrowColor]}`}\n                key={`arrowHead__${ArrowType[arrowType]}_${ArrowColor[arrowColor]}`}\n                markerWidth={8}\n                markerHeight={8}\n                refX={\n                  (arrowColor as unknown as number) ===\n                  ArrowColor.IMPLIED_FOREIGN\n                    ? 0\n                    : 7.1\n                }\n                refY={4}\n                orient=\"auto\"\n              >\n                <polygon points=\"0 0, 8 4, 0 8\" fill={config.main} />\n              </marker>\n            ),\n          )}\n        </>\n      );\n  }\n};\n\nconst WDArrowMarkerDefs = function (): React.ReactElement {\n  return (\n    <>\n      {WDArrowMarkerColors(ArrowType.HOLD)}\n      {WDArrowMarkerColors(ArrowType.MOVE)}\n      {WDArrowMarkerColors(ArrowType.SUPPORT)}\n    </>\n  );\n};\n\nexport default WDArrowMarkerDefs;\n","import BuildUnit from \"../enums/BuildUnit\";\n\nexport const BuildUnitTypeMap = {\n  Army: BuildUnit.Army,\n  Fleet: BuildUnit.Fleet,\n  [BuildUnit.Army]: \"Army\",\n  [BuildUnit.Fleet]: \"Fleet\",\n} as const;\n\nconst BuildUnitMap = {\n  [BuildUnit.Army]: \"Build Army\",\n  [BuildUnit.Fleet]: \"Build Fleet\",\n  \"Build Army\": BuildUnit.Army,\n  \"Build Fleet\": BuildUnit.Fleet,\n} as const;\n\nexport default BuildUnitMap;\n","/* eslint-disable no-bitwise */\nimport * as React from \"react\";\nimport provincesMapData from \"../../../data/map/ProvincesMapData\";\nimport BuildUnit from \"../../../enums/BuildUnit\";\nimport Country from \"../../../enums/Country\";\nimport Province from \"../../../enums/map/variants/classic/Province\";\nimport UIState from \"../../../enums/UIState\";\nimport WDArmyIcon from \"../../ui/units/WDArmyIcon\";\nimport WDFleetIcon from \"../../ui/units/WDFleetIcon\";\n\nexport interface BuildData {\n  availableOrder: string;\n  clickCallback: (\n    availableOrder: BuildData[\"availableOrder\"],\n    canBuild: BuildData[\"canBuild\"],\n    toTerrID: BuildData[\"toTerrID\"],\n  ) => void;\n  country: Country;\n  canBuild: BuildUnit;\n  province: Province;\n  unitSlotName: string;\n  toTerrID: string;\n}\n\nconst WDBuildUnitButtons: React.FC<BuildData> = function ({\n  availableOrder,\n  clickCallback,\n  country,\n  canBuild,\n  province,\n  unitSlotName,\n  toTerrID,\n}): React.ReactElement {\n  const provinceMapData = provincesMapData[province];\n  let svgX =\n    provinceMapData.x + provinceMapData.unitSlotsBySlotName[unitSlotName].x;\n  let svgY =\n    provinceMapData.y + provinceMapData.unitSlotsBySlotName[unitSlotName].y;\n\n  let rw = 70;\n  const rh = 70;\n  const rBorder = 10;\n  const rFill = \"rgba(0,0,0,.7)\";\n  const buildButtons: React.ReactElement[] = [];\n  const iconStyle: React.CSSProperties = {\n    width: 50,\n    height: 50,\n  };\n  const groupStyle: React.CSSProperties = {\n    cursor: \"pointer\",\n  };\n\n  const cx = 0 + rw / 2;\n  const cy = 0 + rh / 2;\n  const r = 25;\n  const iconX = cx - r;\n  const iconY = cy - r;\n  svgY -= rh;\n  if (canBuild & BuildUnit.Army) {\n    buildButtons.push(\n      <g\n        key=\"Army\"\n        style={groupStyle}\n        onClick={() => {\n          clickCallback(availableOrder, BuildUnit.Army, toTerrID);\n        }}\n      >\n        <circle fill=\"white\" r={r} cx={cx} cy={cy} />\n        <svg x={iconX} y={iconY} style={iconStyle}>\n          <WDArmyIcon country={country} iconState={UIState.BUILD} />\n        </svg>\n      </g>,\n    );\n  }\n  if (canBuild & BuildUnit.Fleet) {\n    let shift = 0;\n    if (buildButtons.length) {\n      shift = rw - rBorder;\n      rw = rw * 2 - rBorder;\n    }\n    buildButtons.push(\n      <g\n        key=\"Fleet\"\n        style={groupStyle}\n        onClick={() => {\n          clickCallback(availableOrder, BuildUnit.Fleet, toTerrID);\n        }}\n      >\n        <circle fill=\"white\" r={r} cx={cx + shift} cy={cy} />\n        <svg x={iconX + shift} y={iconY} style={iconStyle}>\n          <WDFleetIcon country={country} iconState={UIState.BUILD} />\n        </svg>\n      </g>,\n    );\n  }\n  svgX -= rw / 2;\n  return (\n    <svg x={svgX} y={svgY}>\n      <rect\n        x={0}\n        y={0}\n        fill={rFill}\n        width={rw}\n        height={rh}\n        rx={rBorder}\n        ry={rBorder}\n      />\n      {buildButtons}\n    </svg>\n  );\n};\n\nexport default WDBuildUnitButtons;\n","/* eslint-disable no-bitwise */\nimport * as React from \"react\";\nimport BuildUnitMap from \"../../../data/BuildUnit\";\nimport countryMap from \"../../../data/map/variants/classic/CountryMap\";\nimport BuildUnit from \"../../../enums/BuildUnit\";\nimport {\n  gameApiSliceActions,\n  gameOrder,\n  gameTerritoriesMeta,\n  gameMaps,\n} from \"../../../state/game/game-api-slice\";\nimport { useAppDispatch, useAppSelector } from \"../../../state/hooks\";\nimport WDBuildUnitButtons from \"./WDBuildUnitButtons\";\nimport { TerritoryMeta } from \"../../../state/interfaces/TerritoriesState\";\nimport TerritoryMap from \"../../../data/map/variants/classic/TerritoryMap\";\nimport provincesMapData from \"../../../data/map/ProvincesMapData\";\n\nconst WDBuildContainer: React.FC = function (): React.ReactElement {\n  const dispatch = useAppDispatch();\n  const maps = useAppSelector(gameMaps);\n\n  const build = (availableOrder, canBuild, toTerrID) => {\n    // console.log(\n    //   `Dispatched a build ${canBuild} ${BuildUnitMap[canBuild]} ${toTerrID}`,\n    // );\n    let terrIDToBuildOn = toTerrID;\n    if (BuildUnitMap[canBuild] === \"Build Army\") {\n      // If we initiated a build popup onto a special coast but the user\n      // chose to build an army, make sure the army gets built on the province\n      // root territory rather than a special coast.\n      terrIDToBuildOn = maps.terrIDToProvinceID[toTerrID];\n    }\n    dispatch(\n      gameApiSliceActions.updateOrdersMeta({\n        [availableOrder]: {\n          saved: false,\n          update: {\n            type: BuildUnitMap[canBuild],\n            toTerrID: terrIDToBuildOn,\n          },\n        },\n      }),\n    );\n    dispatch(gameApiSliceActions.resetOrder());\n  };\n  const order = useAppSelector(gameOrder);\n  const userMember = useAppSelector(\n    (state) => state.game.overview.user!.member,\n  );\n  if (!order || order.type !== \"Build\") {\n    return <div />;\n  }\n  const territory = maps.terrIDToTerritory[order.toTerrID];\n  const { province, unitSlotName } = TerritoryMap[territory];\n  const canBuild =\n    provincesMapData[province].type === \"Coast\"\n      ? BuildUnit.All\n      : BuildUnit.Army;\n  return (\n    <WDBuildUnitButtons\n      key={`${province}-${unitSlotName}`}\n      availableOrder={order.orderID}\n      canBuild={canBuild}\n      clickCallback={build}\n      country={countryMap[userMember.country]}\n      province={province}\n      unitSlotName={unitSlotName}\n      toTerrID={order.toTerrID}\n    />\n  );\n};\n\nexport default WDBuildContainer;\n","import { useEffect } from 'react';\nimport { isBrowser, off, on } from './misc/util';\nvar defaultTarget = isBrowser ? window : null;\nvar isListenerType1 = function (target) {\n    return !!target.addEventListener;\n};\nvar isListenerType2 = function (target) {\n    return !!target.on;\n};\nvar useEvent = function (name, handler, target, options) {\n    if (target === void 0) { target = defaultTarget; }\n    useEffect(function () {\n        if (!handler) {\n            return;\n        }\n        if (!target) {\n            return;\n        }\n        if (isListenerType1(target)) {\n            on(target, name, handler, options);\n        }\n        else if (isListenerType2(target)) {\n            target.on(name, handler, options);\n        }\n        return function () {\n            if (isListenerType1(target)) {\n                off(target, name, handler, options);\n            }\n            else if (isListenerType2(target)) {\n                target.off(name, handler, options);\n            }\n        };\n    }, [name, handler, target, JSON.stringify(options)]);\n};\nexport default useEvent;\n","import { useMemo } from 'react';\nimport useEvent from './useEvent';\nimport { noop } from './misc/util';\nvar createKeyPredicate = function (keyFilter) {\n    return typeof keyFilter === 'function'\n        ? keyFilter\n        : typeof keyFilter === 'string'\n            ? function (event) { return event.key === keyFilter; }\n            : keyFilter\n                ? function () { return true; }\n                : function () { return false; };\n};\nvar useKey = function (key, fn, opts, deps) {\n    if (fn === void 0) { fn = noop; }\n    if (opts === void 0) { opts = {}; }\n    if (deps === void 0) { deps = [key]; }\n    var _a = opts.event, event = _a === void 0 ? 'keydown' : _a, target = opts.target, options = opts.options;\n    var useMemoHandler = useMemo(function () {\n        var predicate = createKeyPredicate(key);\n        var handler = function (handlerEvent) {\n            if (predicate(handlerEvent)) {\n                return fn(handlerEvent);\n            }\n        };\n        return handler;\n    }, deps);\n    useEvent(event, useMemoHandler, target, options);\n};\nexport default useKey;\n","import { useState } from 'react';\nimport useKey from './useKey';\nvar useKeyPress = function (keyFilter) {\n    var _a = useState([false, null]), state = _a[0], set = _a[1];\n    useKey(keyFilter, function (event) { return set([true, event]); }, { event: 'keydown' }, [state]);\n    useKey(keyFilter, function (event) { return set([false, event]); }, { event: 'keyup' }, [state]);\n    return state;\n};\nexport default useKeyPress;\n","import { useEffect } from 'react';\nimport { useFirstMountState } from './useFirstMountState';\nvar useUpdateEffect = function (effect, deps) {\n    var isFirstMount = useFirstMountState();\n    useEffect(function () {\n        if (!isFirstMount) {\n            return effect();\n        }\n    }, deps);\n};\nexport default useUpdateEffect;\n","import { useRef } from 'react';\nexport function useFirstMountState() {\n    var isFirst = useRef(true);\n    if (isFirst.current) {\n        isFirst.current = false;\n        return true;\n    }\n    return isFirst.current;\n}\n","import useKeyPressDefault from './useKeyPress';\nimport useUpdateEffect from './useUpdateEffect';\nvar useKeyPressEvent = function (key, keydown, keyup, useKeyPress) {\n    if (useKeyPress === void 0) { useKeyPress = useKeyPressDefault; }\n    var _a = useKeyPress(key), pressed = _a[0], event = _a[1];\n    useUpdateEffect(function () {\n        if (!pressed && keyup) {\n            keyup(event);\n        }\n        else if (pressed && keydown) {\n            keydown(event);\n        }\n    }, [pressed]);\n};\nexport default useKeyPressEvent;\n","/* eslint-disable no-bitwise */\nimport * as React from \"react\";\nimport Province from \"../../../enums/map/variants/classic/Province\";\nimport provincesMapData from \"../../../data/map/ProvincesMapData\";\n\ntype Position = \"left\" | \"right\" | \"top\" | \"bottom\";\n\ninterface WDOrderTypeButtonProps {\n  province: Province;\n  unitSlotName: string;\n  position: Position;\n  text: string;\n  clickHandler: () => void;\n}\n\nconst WDFlyoutButton: React.FC<WDOrderTypeButtonProps> = function ({\n  province,\n  unitSlotName,\n  position,\n  text,\n  clickHandler,\n}): React.ReactElement {\n  const provinceMapData = provincesMapData[province];\n  if (!provinceMapData || !provinceMapData.unitSlotsBySlotName[unitSlotName])\n    return <div />;\n\n  const unitX =\n    provinceMapData.x + provinceMapData.unitSlotsBySlotName[unitSlotName].x;\n  const unitY =\n    provinceMapData.y + provinceMapData.unitSlotsBySlotName[unitSlotName].y;\n\n  const fontSize = 28;\n  const rw = 55 + fontSize * text.length * 0.4;\n  const rh = 45 + fontSize;\n  const rBorder = 35;\n  const rFill = \"rgba(0,0,0,.7)\";\n  const groupStyle: React.CSSProperties = {\n    cursor: \"pointer\",\n  };\n  let shiftX = 0;\n  let shiftY = 0;\n  const shiftOffset = 50;\n  if (position === \"top\") {\n    shiftY = -(rh / 2 + shiftOffset);\n  } else if (position === \"bottom\") {\n    shiftY = +(rh / 2 + shiftOffset);\n  } else if (position === \"left\") {\n    shiftX = -(rw / 2 + shiftOffset);\n  } else if (position === \"right\") {\n    shiftX = +(rw / 2 + shiftOffset);\n  } else {\n    throw Error(position);\n  }\n  const svgX = unitX - rw / 2 + shiftX;\n  const svgY = unitY - rh / 2 + shiftY;\n\n  /*\n   * r is the circle radius\n  cx and cy are offsets\n  rx and ry and rounded edges\n   */\n  return (\n    <svg\n      x={svgX}\n      y={svgY}\n      filter=\"drop-shadow(10px 10px 18px #222222)\"\n      onClick={clickHandler}\n    >\n      <g style={groupStyle}>\n        <rect\n          x={0}\n          y={0}\n          fill=\"white\"\n          width={rw}\n          height={rh}\n          rx={rBorder}\n          ry={rBorder}\n        />\n        <text\n          x={rw / 2}\n          y={rh / 2}\n          textAnchor=\"middle\"\n          alignmentBaseline=\"middle\"\n          fontFamily=\"Roboto\"\n          fontSize={fontSize}\n          style={{\n            userSelect: \"none\",\n          }}\n          fill=\"black\"\n        >\n          {text}\n        </text>\n      </g>\n    </svg>\n  );\n};\n\nexport default WDFlyoutButton;\n","/* eslint-disable no-bitwise */\nimport React, { FC, ReactElement } from \"react\";\nimport { useKeyPressEvent } from \"react-use\";\nimport {\n  gameApiSliceActions,\n  gameLegalOrders,\n  gameMaps,\n  gameOrder,\n} from \"../../../state/game/game-api-slice\";\nimport { useAppDispatch, useAppSelector } from \"../../../state/hooks\";\nimport { Unit } from \"../../../utils/map/getUnits\";\n\nimport WDFlyoutButton from \"./WDFlyoutButton\";\nimport TerritoryMap from \"../../../data/map/variants/classic/TerritoryMap\";\n\ninterface WDFlyoutContainerProps {\n  units: Unit[];\n}\n\nconst WDFlyoutContainer: FC<WDFlyoutContainerProps> = function ({\n  units,\n}): ReactElement {\n  const dispatch = useAppDispatch();\n  const order = useAppSelector(gameOrder);\n  const maps = useAppSelector(gameMaps);\n  const legalOrders = useAppSelector(gameLegalOrders);\n\n  const unit = units.find((u) => u.unit.id === order.unitID);\n  const mTerr = TerritoryMap[maps.unitToTerritory[order.unitID]];\n\n  const clickHandler = (\n    orderType,\n    viaConvoy: string | undefined = undefined,\n  ) => {\n    if (!order.inProgress) return;\n    console.log(`Dispatched ${orderType}`);\n    dispatch(\n      gameApiSliceActions.updateOrder({\n        type: orderType,\n        viaConvoy,\n      }),\n    );\n  };\n\n  const canConvoy: boolean =\n    unit?.unit?.type === \"Fleet\" &&\n    mTerr.provinceMapData.type === \"Sea\" &&\n    legalOrders.hasAnyLegalConvoysByUnitID[order.unitID];\n\n  const canVia: boolean =\n    unit?.unit?.type === \"Army\" &&\n    legalOrders.legalViasByUnitID[order.unitID]?.length > 0;\n\n  useKeyPressEvent(\"h\", () => clickHandler(\"Hold\"));\n  useKeyPressEvent(\"d\", () => clickHandler(\"Hold\"));\n  useKeyPressEvent(\"m\", () => clickHandler(\"Move\"));\n  useKeyPressEvent(\"a\", () => clickHandler(\"Move\"));\n  useKeyPressEvent(\"v\", () => canVia && clickHandler(\"Move\", \"Yes\"));\n  useKeyPressEvent(\"s\", () => clickHandler(\"Support\"));\n  useKeyPressEvent(\"c\", () => clickHandler(\"Convoy\"));\n\n  if (!order.inProgress || order.type || !order.unitID) {\n    return <div />;\n  }\n\n  const { province, unitSlotName } = mTerr;\n\n  return (\n    <>\n      <WDFlyoutButton\n        province={province}\n        unitSlotName={unitSlotName}\n        position=\"left\"\n        text=\"Hold\"\n        clickHandler={() => clickHandler(\"Hold\")}\n      />\n      <WDFlyoutButton\n        province={province}\n        unitSlotName={unitSlotName}\n        position=\"right\"\n        text=\"Move\"\n        clickHandler={() => clickHandler(\"Move\")}\n      />\n      <WDFlyoutButton\n        province={province}\n        unitSlotName={unitSlotName}\n        position=\"top\"\n        text=\"Support\"\n        clickHandler={() => clickHandler(\"Support\")}\n      />\n      {(canConvoy && (\n        <WDFlyoutButton\n          province={province}\n          unitSlotName={unitSlotName}\n          position=\"bottom\"\n          text=\"Convoy\"\n          clickHandler={() => clickHandler(\"Convoy\")}\n        />\n      )) || <g />}\n      {canVia && (\n        <WDFlyoutButton\n          province={province}\n          unitSlotName={unitSlotName}\n          position=\"bottom\"\n          text=\"Via Convoy\"\n          clickHandler={() => clickHandler(\"Move\", \"Yes\")}\n        />\n      )}\n    </>\n  );\n};\n\nexport default WDFlyoutContainer;\n","/* eslint-disable no-bitwise */\nimport * as React from \"react\";\nimport { IOrderDataHistorical } from \"../../../models/Interfaces\";\nimport GameStateMaps from \"../../../state/interfaces/GameStateMaps\";\nimport ArrowType from \"../../../enums/ArrowType\";\nimport ArrowColor from \"../../../enums/ArrowColor\";\nimport drawArrowFunctional, {\n  getTargetXYWH,\n  getArrowX1Y1X2Y2,\n  makeSVGDrawAsUnsavedAnimateElement,\n} from \"../../../utils/map/drawArrowFunctional\";\nimport TerritoryMap from \"../../../data/map/variants/classic/TerritoryMap\";\nimport { APITerritories } from \"../../../state/interfaces/GameDataResponse\";\nimport { Unit, UnitDrawMode } from \"../../../utils/map/getUnits\";\nimport Province from \"../../../enums/map/variants/classic/Province\";\nimport provincesMapData from \"../../../data/map/ProvincesMapData\";\nimport Territory from \"../../../enums/map/variants/classic/Territory\";\n\n// Indicates that we should draw this Province as having a standoff.\nexport interface StandoffInfo {\n  // The webdip province ID of the standoff\n  provID: string;\n  // The province of the standoff\n  province: Province;\n  // The source and destination of moves that caused the standoff\n  attemptedMoves: [Territory, Territory][];\n}\n\nfunction accumulateMoveOrderArrows(\n  arrows: (React.ReactElement | null)[],\n  orders: IOrderDataHistorical[],\n  territories: APITerritories,\n): void {\n  // console.log(\"drawMoveOrders\");\n  orders\n    .filter((order) => order.type === \"Move\")\n    .forEach((order) => {\n      if (!order.toTerrID) {\n        return;\n      }\n      // console.log({\n      //   order,\n      //   territories,\n      //   terrID: order.terrID,\n      //   lookup: territories[order.terrID],\n      // });\n      const fromTerr = TerritoryMap[territories[order.terrID].name].territory;\n      const toTerr = TerritoryMap[territories[order.toTerrID].name].territory;\n\n      arrows.push(\n        drawArrowFunctional(\n          ArrowType.MOVE,\n          order.success === \"Yes\" ? ArrowColor.MOVE : ArrowColor.MOVE_FAILED,\n          \"unit\",\n          fromTerr,\n          \"territory\",\n          toTerr,\n          order.drawAsUnsaved,\n        ),\n      );\n      // console.log(\"ARROW\");\n      // console.log(arrows[0]);\n\n      if (order.viaConvoy === \"Yes\") {\n        // TODO need to distinguish via vs nonvia orders??\n      }\n    });\n}\n\nfunction getProvIDNumberOfTerrIDNumber(\n  terrID: number,\n  territories: APITerritories,\n): number {\n  if (territories[terrID]?.coastParentID) {\n    return Number(territories[terrID].coastParentID);\n  }\n  return terrID;\n}\n\nfunction accumulateSupportHoldOrderArrows(\n  arrows: (React.ReactElement | null)[],\n  orders: IOrderDataHistorical[],\n  ordersByProvID: { [key: number]: IOrderDataHistorical },\n  territories: APITerritories,\n): void {\n  // Maps supportee and supporter provIDs to help us find mutual supports.\n  const supporterProvIDToSupporteeProvID: { [key: number]: number } = {};\n  orders\n    .filter((order) => order.type === \"Support hold\")\n    .forEach((order) => {\n      const provID = getProvIDNumberOfTerrIDNumber(order.terrID, territories);\n      // Support orders toTerrID are always provinces\n      const supporteeProvID = order.toTerrID;\n      supporterProvIDToSupporteeProvID[provID] = supporteeProvID;\n    });\n  // console.log({ supporterProvIDToSupporteeProvID });\n\n  orders\n    .filter((order) => order.type === \"Support hold\")\n    .forEach((order) => {\n      if (!order.toTerrID) {\n        return;\n      }\n      const supporterProvID = getProvIDNumberOfTerrIDNumber(\n        order.terrID,\n        territories,\n      );\n      const supporterTerr =\n        TerritoryMap[territories[order.terrID].name].territory;\n\n      // Support orders toTerrID are actually always provinces\n      const supporteeProvID = order.toTerrID;\n      const supporteeOrder = ordersByProvID[supporteeProvID];\n\n      // If the supportee order is found at all, use it for the\n      // supportee territory since it is a territory id whereas the supporter's\n      // order might be province id.\n      const supporteeTerr = supporteeOrder\n        ? TerritoryMap[territories[supporteeOrder.terrID].name].territory\n        : TerritoryMap[territories[order.toTerrID].name].territory;\n\n      const arrowColor =\n        order.success === \"Yes\"\n          ? ArrowColor.SUPPORT_HOLD\n          : ArrowColor.SUPPORT_HOLD_FAILED;\n\n      // In case of a mutual support hold, offset the support line by a few pixels\n      // so that the corresponding returning support line from the other order\n      // doesn't overlap with it.\n      const hasMutualSupport =\n        supporterProvIDToSupporteeProvID[supporteeProvID] === supporterProvID;\n      const offsetArrowSourcePixels = hasMutualSupport ? 6 : 0;\n      // console.log({\n      //   supporteeProvID,\n      //   supporterProvID,\n      //   hasMutualSupport,\n      //   offsetArrowSourcePixels,\n      // });\n\n      arrows.push(\n        drawArrowFunctional(\n          ArrowType.HOLD,\n          arrowColor,\n          \"unit\",\n          supporterTerr,\n          \"unit\",\n          supporteeTerr,\n          order.drawAsUnsaved,\n          offsetArrowSourcePixels,\n        ),\n      );\n    });\n}\n\nfunction accumulateSupportMoveOrderArrows(\n  arrows: (React.ReactElement | null)[],\n  orders: IOrderDataHistorical[],\n  ordersByProvID: { [key: number]: IOrderDataHistorical },\n  territories: APITerritories,\n  ghostArrowsAlreadyAdded: Set<string>,\n): void {\n  orders\n    .filter((order) => order.type === \"Support move\")\n    .forEach((order) => {\n      if (!(order.fromTerrID && order.toTerrID)) {\n        return;\n      }\n\n      const supporterTerr =\n        TerritoryMap[territories[order.terrID].name].territory;\n      let isCoordinated = false;\n      // Support orders fromTerrID are actually always provinces\n      const supporteeProvID = order.fromTerrID;\n      const supporteeOrder = ordersByProvID[supporteeProvID];\n      if (\n        supporteeOrder &&\n        supporteeOrder.type === \"Move\" &&\n        (supporteeOrder.terrID === order.fromTerrID ||\n          territories[supporteeOrder.terrID].coastParentID ===\n            order.fromTerrID.toString()) &&\n        (supporteeOrder.toTerrID === order.toTerrID ||\n          territories[supporteeOrder.toTerrID].coastParentID ===\n            order.toTerrID.toString())\n      ) {\n        isCoordinated = true;\n      }\n\n      // If the supportee order is found at all, use it for the\n      // supportee territory since it is coast qualified whereas the supporter's\n      // order does not have to be coast qualified.\n      const supporteeTerr = supporteeOrder\n        ? TerritoryMap[territories[supporteeOrder.terrID].name].territory\n        : TerritoryMap[territories[order.fromTerrID].name].territory;\n\n      const arrowColor =\n        order.success === \"Yes\"\n          ? ArrowColor.SUPPORT_MOVE\n          : ArrowColor.SUPPORT_MOVE_FAILED;\n\n      if (isCoordinated) {\n        // For coordinated supports, use the order for the supportee for determining\n        // the destination location because the destination of the supportee order\n        // must be coast-qualified whereas the locations of the supporter order\n        // does not have to be coast-qualified.\n        const toTerr =\n          TerritoryMap[territories[supporteeOrder.toTerrID].name].territory;\n\n        arrows.push(\n          drawArrowFunctional(\n            ArrowType.SUPPORT,\n            arrowColor,\n            \"unit\",\n            supporterTerr,\n            \"arrow\",\n            getArrowX1Y1X2Y2(\"unit\", supporteeTerr, \"territory\", toTerr),\n            order.drawAsUnsaved,\n          ),\n        );\n      } else {\n        // Uncoordinated supports\n        const toTerr = TerritoryMap[territories[order.toTerrID].name].territory;\n        arrows.push(\n          drawArrowFunctional(\n            ArrowType.SUPPORT,\n            arrowColor,\n            \"unit\",\n            supporterTerr,\n            \"arrow\",\n            getArrowX1Y1X2Y2(\"unit\", supporteeTerr, \"territory\", toTerr),\n            order.drawAsUnsaved,\n          ),\n        );\n        // Also draw a ghosty arrow of what we're trying to support.\n        const ghostArrowID = `${supporteeTerr}|${toTerr}`;\n        if (!ghostArrowsAlreadyAdded.has(ghostArrowID)) {\n          ghostArrowsAlreadyAdded.add(ghostArrowID);\n          arrows.push(\n            drawArrowFunctional(\n              ArrowType.MOVE,\n              ArrowColor.IMPLIED_FOREIGN,\n              \"unit\",\n              supporteeTerr,\n              \"territory\",\n              toTerr,\n              order.drawAsUnsaved,\n            ),\n          );\n        }\n      }\n    });\n}\n\nfunction accumulateConvoyOrderArrows(\n  arrows: (React.ReactElement | null)[],\n  orders: IOrderDataHistorical[],\n  ordersByProvID: { [key: number]: IOrderDataHistorical },\n  territories: APITerritories,\n  ghostArrowsAlreadyAdded: Set<string>,\n): void {\n  orders\n    .filter((order) => order.type === \"Convoy\")\n    .forEach((order) => {\n      if (!(order.fromTerrID && order.toTerrID)) {\n        return;\n      }\n\n      const convoyerTerr =\n        TerritoryMap[territories[order.terrID].name].territory;\n      const convoyeeTerr =\n        TerritoryMap[territories[order.fromTerrID].name].territory;\n      let isCoordinated = false;\n      // Convoyees are always armies, whose terrIDs and provIDs match\n      const convoyeeOrder = ordersByProvID[order.fromTerrID];\n      if (\n        convoyeeOrder &&\n        convoyeeOrder.type === \"Move\" &&\n        convoyeeOrder.terrID === order.fromTerrID &&\n        (convoyeeOrder.toTerrID === order.toTerrID ||\n          territories[convoyeeOrder.toTerrID].coastParentID ===\n            order.toTerrID.toString())\n      ) {\n        isCoordinated = true;\n      }\n\n      const arrowColor =\n        order.success === \"Yes\" ? ArrowColor.CONVOY : ArrowColor.CONVOY_FAILED;\n\n      const toTerr = TerritoryMap[territories[order.toTerrID].name].territory;\n      arrows.push(\n        drawArrowFunctional(\n          ArrowType.CONVOY,\n          arrowColor,\n          \"unit\",\n          convoyerTerr,\n          \"arrow\",\n          getArrowX1Y1X2Y2(\"unit\", convoyeeTerr, \"territory\", toTerr),\n          order.drawAsUnsaved,\n        ),\n      );\n      if (!isCoordinated) {\n        // Also draw a ghosty arrow of what we're trying to support.\n        const ghostArrowID = `${convoyeeTerr}|${toTerr}`;\n        if (!ghostArrowsAlreadyAdded.has(ghostArrowID)) {\n          ghostArrowsAlreadyAdded.add(ghostArrowID);\n          arrows.push(\n            drawArrowFunctional(\n              ArrowType.MOVE,\n              ArrowColor.IMPLIED_FOREIGN,\n              \"unit\",\n              convoyeeTerr,\n              \"territory\",\n              toTerr,\n              order.drawAsUnsaved,\n            ),\n          );\n        }\n      }\n    });\n}\n\nfunction accumulateRetreatArrows(\n  arrows: (React.ReactElement | null)[],\n  orders: IOrderDataHistorical[],\n  territories: APITerritories,\n): void {\n  orders\n    .filter((order) => order.type === \"Retreat\")\n    .forEach((order) => {\n      if (!order.toTerrID) {\n        return;\n      }\n      const fromTerr = TerritoryMap[territories[order.terrID].name].territory;\n      const toTerr = TerritoryMap[territories[order.toTerrID].name].territory;\n\n      arrows.push(\n        drawArrowFunctional(\n          ArrowType.MOVE,\n          ArrowColor.RETREAT,\n          \"unit\",\n          fromTerr,\n          \"territory\",\n          toTerr,\n          order.drawAsUnsaved,\n        ),\n      );\n    });\n}\n\nfunction accumulateDislodgerArrows(\n  arrows: (React.ReactElement | null)[],\n  units: Unit[],\n  territories: APITerritories,\n): void {\n  units\n    .filter((unit) => unit.drawMode === UnitDrawMode.DISLODGING)\n    .forEach((unit) => {\n      if (unit.movedFromTerrID === null) return;\n      const fromTerr =\n        TerritoryMap[territories[unit.movedFromTerrID].name].territory;\n      const toTerr = TerritoryMap[territories[unit.unit.terrID].name].territory;\n\n      arrows.push(\n        drawArrowFunctional(\n          ArrowType.MOVE,\n          ArrowColor.MOVE,\n          \"territory\",\n          fromTerr,\n          \"dislodger\",\n          toTerr,\n          false,\n        ),\n      );\n    });\n}\n\n// This isn't exactly an arrow, but...\nfunction accumulateBuildCircles(\n  arrows: (React.ReactElement | null)[],\n  units: Unit[],\n  territories: APITerritories,\n): void {\n  units\n    .filter((unit) => unit.drawMode === UnitDrawMode.BUILD)\n    .forEach((unit) => {\n      const terr = TerritoryMap[territories[unit.unit.terrID].name].territory;\n      const [x, y, w, h] = getTargetXYWH(\"unit\", terr);\n\n      arrows.push(\n        <circle\n          key={`build-circle-${terr}`}\n          cx={x}\n          cy={y}\n          r={(1.4 * (w + h)) / 4}\n          fill=\"none\"\n          stroke=\"rgb(0,150,0)\"\n          strokeWidth={0.05 * (w + h)}\n        >\n          {unit.drawAsUnsaved && makeSVGDrawAsUnsavedAnimateElement()}\n        </circle>,\n      );\n    });\n}\n\nfunction accumulateDisbandMarks(\n  arrows: (React.ReactElement | null)[],\n  units: Unit[],\n  territories: APITerritories,\n): void {\n  units\n    .filter((unit) => unit.drawMode === UnitDrawMode.DISBANDED)\n    .forEach((unit) => {\n      const terr = TerritoryMap[territories[unit.unit.terrID].name].territory;\n      const [x1, y1, w1, h1] = getTargetXYWH(\"unit\", terr);\n      const MARKSIZE = 38;\n      arrows.push(\n        <line\n          key={`disbandmark-${terr}-1`}\n          x1={x1 - MARKSIZE}\n          y1={y1 - MARKSIZE}\n          x2={x1 + MARKSIZE}\n          y2={y1 + MARKSIZE}\n          stroke=\"red\"\n          strokeWidth={4}\n        >\n          {unit.drawAsUnsaved && makeSVGDrawAsUnsavedAnimateElement()}\n        </line>,\n      );\n      arrows.push(\n        <line\n          key={`disbandmark-${terr}-2`}\n          x1={x1 + MARKSIZE}\n          y1={y1 - MARKSIZE}\n          x2={x1 - MARKSIZE}\n          y2={y1 + MARKSIZE}\n          stroke=\"red\"\n          strokeWidth={4}\n        >\n          {unit.drawAsUnsaved && makeSVGDrawAsUnsavedAnimateElement()}\n        </line>,\n      );\n    });\n}\n\nfunction accumulateStandoffMarks(\n  arrows: (React.ReactElement | null)[],\n  standoffs: StandoffInfo[],\n): void {\n  standoffs.forEach((standoff) => {\n    const { province } = standoff;\n    const { rootTerritory } = provincesMapData[province];\n    if (!rootTerritory) return;\n\n    const [x1, y1, w1, h1] = getTargetXYWH(\"territory\", rootTerritory);\n    const MARKSIZE = 15;\n    arrows.push(\n      <line\n        key={`standoffmark-${province}-1`}\n        x1={x1 - MARKSIZE}\n        y1={y1 - MARKSIZE}\n        x2={x1 + MARKSIZE}\n        y2={y1 + MARKSIZE}\n        stroke=\"tomato\"\n        strokeWidth={6}\n      />,\n    );\n    arrows.push(\n      <line\n        key={`standoffmark-${province}-2`}\n        x1={x1 + MARKSIZE}\n        y1={y1 - MARKSIZE}\n        x2={x1 - MARKSIZE}\n        y2={y1 + MARKSIZE}\n        stroke=\"tomato\"\n        strokeWidth={6}\n      />,\n    );\n    standoff.attemptedMoves.forEach(([src, dst]) => {\n      arrows.push(\n        drawArrowFunctional(\n          ArrowType.MOVE,\n          ArrowColor.MOVE_FAILED,\n          \"unit\",\n          src,\n          \"territory\",\n          dst,\n          false,\n        ),\n      );\n    });\n  });\n}\n\n/*\nexport interface IOrderDataHistorical {\n  countryID: string;\n  dislodged: string;\n  fromTerrID: number;\n  phase: string;\n  success: string;\n  terrID: number;\n  toTerrID: number;\n  turn: number;\n  type: string;\n  unitType: string;\n  viaConvoy: string;\n}\n*/\n\ninterface WDArrowProps {\n  orders: IOrderDataHistorical[];\n  units: Unit[];\n  maps: GameStateMaps;\n  territories: APITerritories;\n  standoffs: StandoffInfo[];\n}\n\nconst WDArrowContainer: React.FC<WDArrowProps> = function ({\n  orders,\n  units,\n  maps,\n  territories,\n  standoffs,\n}): React.ReactElement {\n  const arrows: (React.ReactElement | null)[] = [];\n\n  const ordersByProvID = {};\n  orders.forEach((order) => {\n    ordersByProvID[getProvIDNumberOfTerrIDNumber(order.terrID, territories)] =\n      order;\n  });\n  // Accumulate ghosty arrows so that we don't draw multiples of them if we have\n  // multiple units supporting or convoying a unit that isn't coordinated with them.\n  const ghostArrowsAlreadyAdded = new Set<string>();\n  accumulateMoveOrderArrows(arrows, orders, territories);\n  accumulateSupportHoldOrderArrows(arrows, orders, ordersByProvID, territories);\n  accumulateSupportMoveOrderArrows(\n    arrows,\n    orders,\n    ordersByProvID,\n    territories,\n    ghostArrowsAlreadyAdded,\n  );\n  accumulateConvoyOrderArrows(\n    arrows,\n    orders,\n    ordersByProvID,\n    territories,\n    ghostArrowsAlreadyAdded,\n  );\n  accumulateRetreatArrows(arrows, orders, territories);\n  accumulateDislodgerArrows(arrows, units, territories);\n  accumulateBuildCircles(arrows, units, territories);\n  accumulateDisbandMarks(arrows, units, territories);\n  accumulateStandoffMarks(arrows, standoffs);\n  return <g id=\"arrows\">{arrows}</g>;\n};\n\nexport default WDArrowContainer;\n","import * as React from \"react\";\nimport WDBoardMap from \"./variants/classic/components/WDBoardMap\";\nimport CapturableLandTexture from \"../../assets/textures/capturable-land.jpeg\";\nimport WaterTexture from \"../../assets/textures/sea-texture.png\";\nimport WDArrowMarkerDefs from \"../../utils/map/WDArrowMarkerDefs\";\nimport WDBuildContainer from \"./components/WDBuildContainer\";\nimport WDFlyoutContainer from \"./components/WDFlyoutContainer\";\nimport WDArrowContainer, { StandoffInfo } from \"./components/WDArrowContainer\";\nimport { Unit } from \"../../utils/map/getUnits\";\nimport { IOrderDataHistorical } from \"../../models/Interfaces\";\nimport GameStateMaps from \"../../state/interfaces/GameStateMaps\";\nimport { APITerritories } from \"../../state/interfaces/GameDataResponse\";\nimport Territory from \"../../enums/map/variants/classic/Territory\";\nimport Province from \"../../enums/map/variants/classic/Province\";\n\ninterface WDMapProps {\n  units: Unit[];\n  phase: string;\n  orders: IOrderDataHistorical[];\n  maps: GameStateMaps;\n  territories: APITerritories;\n  centersByProvince: { [key: string]: { ownerCountryID: string } };\n  standoffs: StandoffInfo[];\n  isLivePhase: boolean; // Game is live and user is viewing the latest phase?\n}\n\nconst WDMap: React.ForwardRefExoticComponent<\n  WDMapProps & React.RefAttributes<SVGSVGElement>\n> = React.forwardRef<SVGSVGElement, WDMapProps>(\n  (\n    {\n      units,\n      phase,\n      orders,\n      maps,\n      territories,\n      centersByProvince,\n      standoffs,\n      isLivePhase,\n    },\n    ref,\n  ): React.ReactElement => (\n    <svg\n      id=\"map\"\n      fill=\"none\"\n      ref={ref}\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n      }}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g id=\"full-map-svg\">\n        <g id=\"container\">\n          <WDBoardMap\n            units={units}\n            centersByProvince={centersByProvince}\n            phase={phase}\n            isLivePhase={isLivePhase}\n          />\n          <WDArrowContainer\n            orders={orders}\n            units={units}\n            maps={maps}\n            territories={territories}\n            standoffs={standoffs}\n          />\n          {isLivePhase && <WDBuildContainer />}\n          {isLivePhase && <WDFlyoutContainer units={units} />}\n        </g>\n      </g>\n      <defs>\n        <pattern\n          id=\"capturable-land\"\n          patternUnits=\"userSpaceOnUse\"\n          width=\"1546\"\n          height=\"1384\"\n        >\n          <image\n            href={CapturableLandTexture}\n            x=\"0\"\n            y=\"0\"\n            width=\"1546\"\n            height=\"1384\"\n          />\n        </pattern>\n        <pattern\n          id=\"sea-texture\"\n          patternUnits=\"userSpaceOnUse\"\n          width=\"1546\"\n          height=\"1384\"\n        >\n          <image href={WaterTexture} x=\"0\" y=\"0\" width=\"1966\" height=\"1615\" />\n        </pattern>\n        {WDArrowMarkerDefs()}\n\n        <pattern\n          id=\"neutral-land-texture\"\n          width=\"30\"\n          height=\"10\"\n          patternTransform=\"rotate(45 0 0)\"\n          patternUnits=\"userSpaceOnUse\"\n        >\n          <rect\n            x=\"0\"\n            y=\"0\"\n            width=\"30\"\n            height=\"10\"\n            style={{ fill: \"#C5BFBE\" }}\n          />\n          <line\n            x1=\"0\"\n            y1=\"0\"\n            x2=\"0\"\n            y2=\"10\"\n            style={{ stroke: \"#B5AFAE\", strokeWidth: 30 }}\n          />\n        </pattern>\n\n        <filter id=\"selectionGlow\" height=\"120%\" width=\"120%\" x=\"-10%\" y=\"-10%\">\n          <feMorphology\n            operator=\"dilate\"\n            radius=\"5\"\n            in=\"SourceAlpha\"\n            result=\"thickerSource\"\n          />\n          <feGaussianBlur\n            stdDeviation=\"8\"\n            in=\"thickerSource\"\n            result=\"blurredSource\"\n          />\n          <feFlood floodColor=\"rgb(100,200,255)\" result=\"glowColor\" />\n          <feComposite\n            in=\"glowColor\"\n            in2=\"blurredSource\"\n            operator=\"in\"\n            result=\"selectionGlowGlow\"\n          />\n        </filter>\n        <filter id=\"choiceGlow\" height=\"120%\" width=\"120%\" x=\"-10%\" y=\"-10%\">\n          <feMorphology\n            operator=\"dilate\"\n            radius=\"1\"\n            in=\"SourceAlpha\"\n            result=\"thickerSource\"\n          />\n          <feGaussianBlur\n            stdDeviation=\"6\"\n            in=\"thickerSource\"\n            result=\"blurredSource\"\n          />\n          <feFlood floodColor=\"rgb(255,255,255)\" result=\"glowColor\" />\n          <feComposite\n            in=\"glowColor\"\n            in2=\"blurredSource\"\n            operator=\"in\"\n            result=\"choicesGlowGlow\"\n          />\n        </filter>\n      </defs>\n    </svg>\n  ),\n);\n\nexport default React.memo(WDMap);\n","import * as React from \"react\";\nimport * as d3 from \"d3\";\nimport Device from \"../../enums/Device\";\nimport getInitialViewTranslation from \"../../utils/map/getInitialViewTranslation\";\nimport Scale from \"../../types/Scale\";\nimport WDMap from \"../map/WDMap\";\nimport useViewport from \"../../hooks/useViewport\";\nimport getDevice from \"../../utils/getDevice\";\nimport { useAppDispatch, useAppSelector } from \"../../state/hooks\";\nimport {\n  gameApiSliceActions,\n  gameOrdersMeta,\n} from \"../../state/game/game-api-slice\";\nimport { Unit } from \"../../utils/map/getUnits\";\nimport { IOrderDataHistorical } from \"../../models/Interfaces\";\nimport GameStateMaps from \"../../state/interfaces/GameStateMaps\";\nimport { APITerritories } from \"../../state/interfaces/GameDataResponse\";\nimport Province from \"../../enums/map/variants/classic/Province\";\nimport { StandoffInfo } from \"../map/components/WDArrowContainer\";\n\nconst Scales: Scale = {\n  DESKTOP: [0.45, 3],\n  MOBILE_LG: [0.32, 1.6],\n  MOBILE_LG_LANDSCAPE: [0.3, 1.6],\n  MOBILE: [0.32, 1.6],\n  MOBILE_LANDSCAPE: [0.27, 1.6],\n  TABLET: [0.6275, 3],\n  TABLET_LANDSCAPE: [0.6, 3],\n};\n\nconst getInitialScaleForDevice = (device: Device): number[] => {\n  return Scales[device];\n};\n\nconst mapOriginalWidth = 6010;\nconst mapOriginalHeight = 3005;\n\ninterface WDMapControllerProps {\n  units: Unit[];\n  phase: string;\n  orders: IOrderDataHistorical[];\n  maps: GameStateMaps;\n  territories: APITerritories;\n  centersByProvince: { [key: string]: { ownerCountryID: string } };\n  standoffs: StandoffInfo[];\n  isLivePhase: boolean; // Game is live and user is viewing the latest phase?\n}\n\nconst WDMapController: React.FC<WDMapControllerProps> = function ({\n  units,\n  phase,\n  orders,\n  maps,\n  territories,\n  centersByProvince,\n  isLivePhase,\n  standoffs,\n}): React.ReactElement {\n  const svgElement = React.useRef<SVGSVGElement>(null);\n  const [viewport] = useViewport();\n  const dispatch = useAppDispatch();\n  const ordersMeta = useAppSelector(gameOrdersMeta);\n  const device = getDevice(viewport);\n  const [scaleMin, scaleMax] = getInitialScaleForDevice(device);\n\n  if (phase === \"Error\") return <div />;\n  // const legalOrders = useAppSelector(gameLegalOrders);\n  // console.log({ legalOrders });\n\n  React.useLayoutEffect(() => {\n    if (svgElement.current) {\n      const fullMap = d3.select(svgElement.current);\n      const contained = fullMap.select(\"#container\");\n      const containedRect = contained.node().getBBox();\n      const gameBoardAreaRect = fullMap\n        .select(\"#playableProvinces\")\n        .node()\n        .getBBox();\n\n      const { scale, x, y } = getInitialViewTranslation(\n        containedRect,\n        gameBoardAreaRect,\n        scaleMin,\n        viewport,\n      );\n\n      const zoom = ({ transform }) => {\n        contained.attr(\"transform\", transform);\n      };\n\n      const d3Zoom = d3\n        .zoom()\n        .translateExtent([\n          [0, 0],\n          [mapOriginalWidth, mapOriginalHeight],\n        ])\n        .scaleExtent([scale, scaleMax])\n        .clickDistance(3)\n        .on(\"zoom\", zoom);\n\n      fullMap\n        .on(\"wheel\", (e) => e.preventDefault())\n        .call(d3Zoom)\n        .call(d3Zoom.transform, d3.zoomIdentity.translate(x, y).scale(scale))\n        .on(\"dblclick.zoom\", null);\n    }\n  }, [svgElement, viewport]);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      dispatch(gameApiSliceActions.updateOrdersMeta(ordersMeta));\n    }, 500);\n  }, []);\n\n  React.useEffect(() => {\n    const keydownHandler = (e) => {\n      const keyCode = e.which || e.keyCode;\n      const ESCAPE = 27;\n      // console.log(\"KEYCODE\");\n      // console.log(keyCode);\n      if (keyCode === ESCAPE) {\n        e.preventDefault();\n        // console.log(\"DISPATCH RESET ORDER\");\n        dispatch(gameApiSliceActions.resetOrder());\n      }\n    };\n    // console.log(\"ADDING HANLDER\");\n    window.addEventListener(\"keydown\", keydownHandler);\n    return () => window.removeEventListener(\"keydown\", keydownHandler);\n  });\n\n  return (\n    <div\n      style={{\n        width: viewport.width,\n        height: viewport.height,\n      }}\n    >\n      <WDMap\n        ref={svgElement}\n        units={units}\n        phase={phase}\n        orders={orders}\n        maps={maps}\n        territories={territories}\n        centersByProvince={centersByProvince}\n        standoffs={standoffs}\n        isLivePhase={isLivePhase}\n      />\n    </div>\n  );\n};\n\nexport default WDMapController;\n","import { Viewport, BBox } from \"../../interfaces\";\nimport Translation from \"../../types/Translation\";\n\nexport default function getInitialViewTranslation(\n  containedRect: BBox,\n  gameBoardRect: BBox,\n  scale: number,\n  viewport: Viewport,\n): Translation {\n  let newScale = scale;\n  const containedHeight = containedRect.height * scale;\n\n  if (containedHeight < viewport.height) {\n    newScale = scale + (1 - containedHeight / viewport.height);\n  }\n\n  const translatedGameBoardAreaHeight = gameBoardRect.height * newScale;\n  const translatedGameBoardAreaY = gameBoardRect.y * newScale;\n\n  const translatedGameBoardAreaWidth = gameBoardRect.width * newScale;\n  const translatedGameBoardAreaX = gameBoardRect.x * newScale;\n\n  const nonPlayableHorizontalArea = Math.abs(\n    viewport.width - translatedGameBoardAreaWidth,\n  );\n  const horizontalPadding = Math.abs(nonPlayableHorizontalArea / 2);\n\n  const nonPlayableVerticalArea = Math.abs(\n    viewport.height - translatedGameBoardAreaHeight,\n  );\n  const verticalPadding = Math.abs(nonPlayableVerticalArea / 2);\n  const verticalBottomPadding =\n    (containedRect.y +\n      containedRect.height -\n      (gameBoardRect.y + gameBoardRect.height)) *\n    newScale;\n\n  let x: number;\n  let y: number;\n\n  if (viewport.height >= translatedGameBoardAreaHeight) {\n    y = -translatedGameBoardAreaY + verticalPadding;\n    if (verticalPadding > verticalBottomPadding) {\n      y += verticalPadding - verticalBottomPadding;\n    }\n  } else {\n    y = -translatedGameBoardAreaY - verticalPadding;\n  }\n\n  if (viewport.width >= translatedGameBoardAreaWidth) {\n    x = -translatedGameBoardAreaX + horizontalPadding;\n  } else {\n    x = -translatedGameBoardAreaX - horizontalPadding;\n  }\n\n  return {\n    scale: newScale,\n    x,\n    y,\n  };\n}\n"],"names":["className","height","width","fill","style","opacity","province","x","y","theme","useTheme","id","viewBox","xmlns","d","stroke","palette","primary","main","WDLabel","text","fontWeight","fontSize","userSelect","defaultProps","undefined","ArrowType","provinceMapData","ownerCountryID","playerCountryID","highlightSelection","dispatch","useAppDispatch","useAppSelector","gameOverview","members","user","territoryFill","territoryFillOpacity","ownerCountry","find","m","countryID","Number","country","type","playerCountry","onClick","e","evt","gameApiSliceActions","clickProvince","texture","path","strokeOpacity","strokeWidth","fillOpacity","centerPos","labels","map","i","name","txt","abbr","overflow","iconState","UIState","light","getTargetXYWH","identifier","arrowX1","arrowY1","toTerritoryName","Territory","toTerritoryData","TerritoryMap","unitSlotName","unitSlotsBySlotName","UNIT_WIDTH","UNIT_HEIGHT","arrowReceiver","getArrowX1Y1X2Y2","sourceType","sourceIdentifier","receiverType","receiverIdentifier","sx1","sy1","sourceWidth","sourceHeight","rx2","ry2","receiverWidth","unitH","unitW","rh","rw","x1","x2","y1","y2","xDiff","yDiff","Math","abs","theta","atan2","x1New","cos","y1New","sin","x2New","y2New","arrowDispatchReceiveCoordinates","makeSVGDrawAsUnsavedAnimateElement","attributeName","values","keyTimes","dur","repeatCount","drawArrowFunctional","arrowType","arrowColor","strokeDasharray","drawAsUnsaved","offsetArrowSourcePixels","ArrowColor","dx","dy","length","sqrt","dxunit","dyunit","dyunitRotated","markerEnd","webDiplomacyTheme","BuildUnit","unit","unitState","unitWidth","unitHeight","iconWidth","ARMY_RAW_ICON_WIDTH","iconHeight","ARMY_RAW_ICON_HEIGHT","xOffset","yOffset","yScale","transform","pointerEvents","WDArmyIcon","filter","svg","filters","dropShadows","children","units","unitFCs","unitFCsDislodging","mappedTerritory","forEach","drawMode","UnitDrawMode","wdUnit","unitSlots","unitName","centersByProvince","phase","isLivePhase","gameDataResponse","gameData","maps","gameMaps","provinceStatusByProvID","data","territoryStatuses","provinceStatus","terrIDToProvince","curOrder","gameOrder","legalOrders","gameLegalOrders","overview","provincesToHighlight","provincesToChoose","inProgress","viaConvoy","unitToTerrID","unitID","legalViasByUnitID","via","dest","legalMoveDestsByUnitID","territory","fromTerrID","legalSupportsByUnitID","support","Object","keys","legalConvoysByUnitID","legalRetreatDestsByUnitID","push","member","supplyCenterNo","unitNo","possibleBuildDests","provincesToHighlightSet","Set","provincesToChooseSet","unplayableProvinces","provincesMapData","playable","playableProvincesData","Province","playableProvinces","has","playableProvinceBorderHighlights","playableProvinceOverlays","WDArrowMarkerColors","entries","config","markerWidth","markerHeight","refX","refY","orient","points","markerUnits","Army","Fleet","availableOrder","clickCallback","canBuild","toTerrID","svgX","svgY","buildButtons","iconStyle","groupStyle","cursor","cx","iconX","r","cy","shift","rx","ry","order","userMember","state","game","terrIDToTerritory","orderID","terrIDToBuildOn","BuildUnitMap","terrIDToProvinceID","saved","update","countryMap","defaultTarget","isBrowser","window","isListenerType1","target","addEventListener","isListenerType2","on","handler","options","useEffect","off","JSON","stringify","key","fn","opts","deps","noop","_a","event","useMemoHandler","useMemo","keyFilter","predicate","handlerEvent","useEvent","useState","set","useKey","effect","isFirstMount","isFirst","useRef","current","useFirstMountState","keydown","keyup","useKeyPress","useKeyPressDefault","pressed","useUpdateEffect","position","clickHandler","unitX","unitY","shiftX","shiftY","Error","textAnchor","alignmentBaseline","fontFamily","u","mTerr","unitToTerritory","orderType","console","log","canConvoy","hasAnyLegalConvoysByUnitID","canVia","useKeyPressEvent","getProvIDNumberOfTerrIDNumber","terrID","territories","coastParentID","orders","standoffs","arrows","ordersByProvID","ghostArrowsAlreadyAdded","fromTerr","toTerr","success","accumulateMoveOrderArrows","supporterProvIDToSupporteeProvID","provID","supporteeProvID","supporterProvID","supporterTerr","supporteeOrder","supporteeTerr","accumulateSupportHoldOrderArrows","isCoordinated","toString","ghostArrowID","add","accumulateSupportMoveOrderArrows","convoyerTerr","convoyeeTerr","convoyeeOrder","accumulateConvoyOrderArrows","accumulateRetreatArrows","movedFromTerrID","accumulateDislodgerArrows","terr","w","h","accumulateBuildCircles","MARKSIZE","accumulateDisbandMarks","standoff","rootTerritory","attemptedMoves","src","dst","accumulateStandoffMarks","WDMap","React","ref","patternUnits","href","CapturableLandTexture","WaterTexture","WDArrowMarkerDefs","patternTransform","operator","radius","in","result","stdDeviation","floodColor","in2","Scales","DESKTOP","MOBILE_LG","MOBILE_LG_LANDSCAPE","MOBILE","MOBILE_LANDSCAPE","TABLET","TABLET_LANDSCAPE","svgElement","useViewport","viewport","ordersMeta","gameOrdersMeta","device","getInitialScaleForDevice","getDevice","scaleMin","scaleMax","fullMap","d3","contained","select","containedRect","gameBoardRect","scale","newScale","containedHeight","translatedGameBoardAreaHeight","translatedGameBoardAreaY","translatedGameBoardAreaWidth","translatedGameBoardAreaX","nonPlayableHorizontalArea","horizontalPadding","nonPlayableVerticalArea","verticalPadding","verticalBottomPadding","getInitialViewTranslation","node","getBBox","d3Zoom","translateExtent","scaleExtent","clickDistance","attr","preventDefault","call","setTimeout","keydownHandler","which","keyCode","removeEventListener"],"sourceRoot":""}